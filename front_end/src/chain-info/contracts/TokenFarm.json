{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dappTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dappToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getUserSingleTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeedMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "unstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/riccardoanacar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
    "1": "/Users/riccardoanacar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/riccardoanacar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "3": "/Users/riccardoanacar/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "4": "contracts/TokenFarm.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenFarm.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        655
      ],
      "Context": [
        677
      ],
      "IERC20": [
        609
      ],
      "Ownable": [
        531
      ],
      "TokenFarm": [
        427
      ]
    },
    "id": 428,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "/Users/riccardoanacar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 428,
        "sourceUnit": 532,
        "src": "57:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/riccardoanacar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 428,
        "sourceUnit": 610,
        "src": "110:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/riccardoanacar/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 428,
        "sourceUnit": 656,
        "src": "167:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 531,
              "src": "400:7:4"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "400:7:4"
          }
        ],
        "canonicalName": "TokenFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 427,
        "linearizedBaseContracts": [
          427,
          531,
          677
        ],
        "name": "TokenFarm",
        "nameLocation": "387:9:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "29161a00",
            "id": 12,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "573:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "518:69:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "526:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "518:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 10,
                "keyType": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "545:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "537:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "556:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b83e0234",
            "id": 16,
            "mutability": "mutable",
            "name": "uniqueTokensStaked",
            "nameLocation": "717:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "682:53:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "690:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "682:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 14,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "701:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 19,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "778:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "761:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "761:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "761:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 22,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "834:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "817:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "817:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 21,
              "nodeType": "ArrayTypeName",
              "src": "817:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27927b3e",
            "id": 26,
            "mutability": "mutable",
            "name": "tokenPriceFeedMapping",
            "nameLocation": "924:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "889:56:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "897:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "889:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "908:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5eb186f8",
            "id": 29,
            "mutability": "mutable",
            "name": "dappToken",
            "nameLocation": "995:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "981:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$609",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 609,
                "src": "981:6:4"
              },
              "referencedDeclaration": 609,
              "src": "981:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$609",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "1057:54:4",
              "statements": [
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1067:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$609",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36,
                          "name": "_dappTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1086:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 35,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "1079:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$609_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1079:25:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$609",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1067:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$609",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:37:4"
                }
              ]
            },
            "id": 41,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_dappTokenAddress",
                  "nameLocation": "1031:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1023:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:27:4"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:4"
            },
            "scope": 427,
            "src": "1011:100:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "1220:59:4",
              "statements": [
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50,
                        "name": "tokenPriceFeedMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1230:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 52,
                      "indexExpression": {
                        "id": 51,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1252:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1230:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1262:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1230:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:42:4"
                }
              ]
            },
            "functionSelector": "877dd39d",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "1206:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1206:9:4"
              }
            ],
            "name": "setPriceFeedContract",
            "nameLocation": "1126:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1155:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1147:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "1171:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1163:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1146:36:4"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1220:0:4"
            },
            "scope": 427,
            "src": "1117:162:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "1346:724:4",
              "statements": [
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "1523:541:4",
                    "statements": [
                      {
                        "assignments": [
                          74
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 74,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "1590:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 92,
                            "src": "1582:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 73,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1582:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 78,
                        "initialValue": {
                          "baseExpression": {
                            "id": 75,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "1602:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "id": 76,
                            "name": "stakersIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "1610:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1602:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1582:41:4"
                      },
                      {
                        "assignments": [
                          80
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80,
                            "mutability": "mutable",
                            "name": "userTotalValue",
                            "nameLocation": "1645:14:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 92,
                            "src": "1637:22:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 79,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1637:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 84,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 82,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1680:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 81,
                            "name": "getUserTotalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "1662:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1662:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1637:53:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 88,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1723:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 89,
                              "name": "userTotalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "1734:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 85,
                              "name": "dappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1704:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$609",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 558,
                            "src": "1704:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1704:45:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "1704:45:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66,
                      "name": "stakersIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1455:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 67,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1470:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1470:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1455:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "initializationExpression": {
                    "assignments": [
                      63
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "stakersIndex",
                        "nameLocation": "1425:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "1417:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1417:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 65,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1440:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1417:24:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1498:14:4",
                      "subExpression": {
                        "id": 70,
                        "name": "stakersIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1498:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 72,
                    "nodeType": "ExpressionStatement",
                    "src": "1498:14:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "1399:665:4"
                }
              ]
            },
            "functionSelector": "a1ee8c78",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "1336:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1336:9:4"
              }
            ],
            "name": "issueToken",
            "nameLocation": "1316:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1326:2:4"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:0:4"
            },
            "scope": 427,
            "src": "1307:763:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "2166:497:4",
              "statements": [
                {
                  "assignments": [
                    103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 103,
                      "mutability": "mutable",
                      "name": "totalValue",
                      "nameLocation": "2184:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 141,
                      "src": "2176:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2176:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2197:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2176:22:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 107,
                            "name": "uniqueTokensStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "2216:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 109,
                          "indexExpression": {
                            "id": 108,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "2235:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2216:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2244:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2216:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f20746f6b656e73207374616b656420212121",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2247:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d2331c929f9b7bde14d42524ce48d4219b26bc797cf5974efea32c530ce5822",
                          "typeString": "literal_string \"NO tokens staked !!!\""
                        },
                        "value": "NO tokens staked !!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d2331c929f9b7bde14d42524ce48d4219b26bc797cf5974efea32c530ce5822",
                          "typeString": "literal_string \"NO tokens staked !!!\""
                        }
                      ],
                      "id": 106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2208:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2208:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2208:62:4"
                },
                {
                  "body": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "2425:205:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 126,
                            "name": "totalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2439:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 127,
                              "name": "totalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "2468:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 129,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 97,
                                  "src": "2542:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 130,
                                    "name": "allowedTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22,
                                    "src": "2569:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 132,
                                  "indexExpression": {
                                    "id": 131,
                                    "name": "allowedTokenIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "2583:17:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2569:32:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 128,
                                "name": "getUserSingleTokenValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 184,
                                "src": "2497:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view returns (uint256)"
                                }
                              },
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2497:122:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2468:151:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2439:180:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "2439:180:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 119,
                      "name": "allowedTokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "2341:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 120,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2361:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2361:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2341:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 138,
                  "initializationExpression": {
                    "assignments": [
                      116
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "allowedTokenIndex",
                        "nameLocation": "2306:17:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "2298:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2298:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 118,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2326:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2298:29:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2395:19:4",
                      "subExpression": {
                        "id": 123,
                        "name": "allowedTokenIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2395:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 125,
                    "nodeType": "ExpressionStatement",
                    "src": "2395:19:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "2280:350:4"
                },
                {
                  "expression": {
                    "id": 139,
                    "name": "totalValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 103,
                    "src": "2646:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "2639:17:4"
                }
              ]
            },
            "functionSelector": "af3f5e22",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalValue",
            "nameLocation": "2103:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2129:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2121:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2120:15:4"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2157:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2157:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2156:9:4"
            },
            "scope": 427,
            "src": "2094:569:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "2879:418:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 151,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2995:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 153,
                      "indexExpression": {
                        "id": 152,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "3014:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2995:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3024:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2995:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 159,
                  "nodeType": "IfStatement",
                  "src": "2991:69:4",
                  "trueBody": {
                    "id": 158,
                    "nodeType": "Block",
                    "src": "3027:33:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3048:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 150,
                        "id": 157,
                        "nodeType": "Return",
                        "src": "3041:8:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    161,
                    163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 161,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "3167:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "3159:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 160,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3159:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 163,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "3182:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "3174:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3174:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 167,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 165,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3208:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 164,
                      "name": "getTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "3194:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3194:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3158:57:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 174,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 168,
                                        "name": "stakingBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12,
                                        "src": "3235:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                          "typeString": "mapping(address => mapping(address => uint256))"
                                        }
                                      },
                                      "id": 170,
                                      "indexExpression": {
                                        "id": 169,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 146,
                                        "src": "3250:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3235:22:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 172,
                                    "indexExpression": {
                                      "id": 171,
                                      "name": "_user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 144,
                                      "src": "3258:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3235:29:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 173,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "3267:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3235:37:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 175,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3234:39:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3276:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 177,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 163,
                                "src": "3280:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3276:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3234:54:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 180,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3233:56:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 181,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3232:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 150,
                  "id": 182,
                  "nodeType": "Return",
                  "src": "3225:65:4"
                }
              ]
            },
            "functionSelector": "276b11da",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSingleTokenValue",
            "nameLocation": "2766:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2798:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "2790:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2813:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "2805:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2805:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2789:31:4"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "2866:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2865:9:4"
            },
            "scope": 427,
            "src": "2757:540:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "3431:514:4",
              "statements": [
                {
                  "assignments": [
                    194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 194,
                      "mutability": "mutable",
                      "name": "priceFeedAddress",
                      "nameLocation": "3534:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "3526:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 193,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3526:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 198,
                  "initialValue": {
                    "baseExpression": {
                      "id": 195,
                      "name": "tokenPriceFeedMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "3553:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 197,
                    "indexExpression": {
                      "id": 196,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "3575:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3553:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3526:56:4"
                },
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "3667:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "3645:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$655",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 200,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 199,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 655,
                          "src": "3645:21:4"
                        },
                        "referencedDeclaration": 655,
                        "src": "3645:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$655",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 205,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 203,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "3714:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 202,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "3679:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$655_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3679:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$655",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3645:95:4"
                },
                {
                  "assignments": [
                    null,
                    207,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "3760:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "3753:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3753:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 211,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 208,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "3775:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$655",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 654,
                      "src": "3775:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3775:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3750:52:4"
                },
                {
                  "assignments": [
                    213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "3855:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "3847:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3847:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 220,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 216,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 201,
                            "src": "3874:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$655",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 616,
                          "src": "3874:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3874:20:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3866:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3866:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3866:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3847:48:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 223,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "3921:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3913:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 221,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3913:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3913:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 225,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "3929:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 226,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3912:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 192,
                  "id": 227,
                  "nodeType": "Return",
                  "src": "3905:33:4"
                }
              ]
            },
            "functionSelector": "f1c5d6c2",
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nameLocation": "3334:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3356:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "3348:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3347:16:4"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "3409:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3409:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "3418:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3418:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3408:18:4"
            },
            "scope": 427,
            "src": "3325:620:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "4053:832:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 237,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "4140:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4150:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4140:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468656e2030",
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4153:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62136071bb18aea7a6f2941f7f9e36a8a8f0e648cb31b9937f5a3595c112224b",
                          "typeString": "literal_string \"Amount must be greater then 0\""
                        },
                        "value": "Amount must be greater then 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62136071bb18aea7a6f2941f7f9e36a8a8f0e648cb31b9937f5a3595c112224b",
                          "typeString": "literal_string \"Amount must be greater then 0\""
                        }
                      ],
                      "id": 236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4132:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4132:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "4132:53:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 245,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "4261:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 244,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "4246:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4246:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e2069732063757272656e746c79206e6f7420616c6c6f7765642121",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4270:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80015b17b2a30ad0243afd424d0cc31b60d9c65556f656b068550d17699b0384",
                          "typeString": "literal_string \"Token is currently not allowed!!\""
                        },
                        "value": "Token is currently not allowed!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80015b17b2a30ad0243afd424d0cc31b60d9c65556f656b068550d17699b0384",
                          "typeString": "literal_string \"Token is currently not allowed!!\""
                        }
                      ],
                      "id": 243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4238:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4238:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "4238:67:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 254,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4534:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4534:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 258,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4554:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFarm_$427",
                              "typeString": "contract TokenFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFarm_$427",
                              "typeString": "contract TokenFarm"
                            }
                          ],
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4546:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4546:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4546:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 260,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "4561:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 251,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "4513:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 250,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 609,
                          "src": "4506:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$609_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4506:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$609",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 590,
                      "src": "4506:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4506:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "4506:63:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 264,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4604:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4604:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 266,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "4616:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 263,
                      "name": "updateUniqueTokensStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 380,
                      "src": "4579:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4579:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "4579:44:4"
                },
                {
                  "expression": {
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 269,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4633:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 273,
                        "indexExpression": {
                          "id": 270,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "4648:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4633:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 274,
                      "indexExpression": {
                        "expression": {
                          "id": 271,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4656:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4656:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4633:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 275,
                            "name": "stakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "4682:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 277,
                          "indexExpression": {
                            "id": 276,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "4697:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4682:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 280,
                        "indexExpression": {
                          "expression": {
                            "id": 278,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4705:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4705:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4682:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 281,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "4731:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4682:56:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4633:105:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:105:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 285,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "4793:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 288,
                      "indexExpression": {
                        "expression": {
                          "id": 286,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4812:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4812:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4793:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4827:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4793:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 299,
                  "nodeType": "IfStatement",
                  "src": "4789:90:4",
                  "trueBody": {
                    "id": 298,
                    "nodeType": "Block",
                    "src": "4830:49:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 294,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4857:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4857:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 291,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "4844:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4844:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4844:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 297,
                        "nodeType": "ExpressionStatement",
                        "src": "4844:24:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "0bea440d",
            "id": 301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "4001:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4021:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "4013:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4013:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4038:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "4030:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4030:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4012:33:4"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4053:0:4"
            },
            "scope": 427,
            "src": "3992:893:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 352,
              "nodeType": "Block",
              "src": "4961:478:4",
              "statements": [
                {
                  "assignments": [
                    307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 307,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4979:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 352,
                      "src": "4971:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4971:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 314,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 308,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4989:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 310,
                      "indexExpression": {
                        "id": 309,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "5004:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4989:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 313,
                    "indexExpression": {
                      "expression": {
                        "id": 311,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5012:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5012:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4989:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4971:52:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 316,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "5041:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5051:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5041:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e672062616c616e63652063616e6e6e6f74206265207a65726f",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5054:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b40276fb51e26c6b461939ff8efad06c3752db7a9a075209368c1e5d2a6426cb",
                          "typeString": "literal_string \"Staking balance cannnot be zero\""
                        },
                        "value": "Staking balance cannnot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b40276fb51e26c6b461939ff8efad06c3752db7a9a075209368c1e5d2a6426cb",
                          "typeString": "literal_string \"Staking balance cannnot be zero\""
                        }
                      ],
                      "id": 315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5033:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5033:55:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "5033:55:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5122:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5122:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 328,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "5134:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 323,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "5105:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 322,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 609,
                          "src": "5098:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$609_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5098:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$609",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 558,
                      "src": "5098:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5098:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "5098:44:4"
                },
                {
                  "expression": {
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 331,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "5152:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 335,
                        "indexExpression": {
                          "id": 332,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "5167:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5152:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 336,
                      "indexExpression": {
                        "expression": {
                          "id": 333,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5175:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5175:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5152:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5189:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5152:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "5152:38:4"
                },
                {
                  "expression": {
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 340,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "5245:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 343,
                      "indexExpression": {
                        "expression": {
                          "id": 341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5264:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5264:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5245:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 344,
                          "name": "uniqueTokensStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "5278:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 347,
                        "indexExpression": {
                          "expression": {
                            "id": 345,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5297:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5297:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5278:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5311:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5278:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5245:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "5245:67:4"
                }
              ]
            },
            "functionSelector": "2d1ad8b8",
            "id": 353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeTokens",
            "nameLocation": "4924:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4946:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4938:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4938:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4937:16:4"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4961:0:4"
            },
            "scope": 427,
            "src": "4915:524:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 379,
              "nodeType": "Block",
              "src": "5519:189:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 360,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "5533:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 362,
                        "indexExpression": {
                          "id": 361,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "5548:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5533:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 364,
                      "indexExpression": {
                        "id": 363,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "5556:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5533:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5566:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5533:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 378,
                  "nodeType": "IfStatement",
                  "src": "5529:173:4",
                  "trueBody": {
                    "id": 377,
                    "nodeType": "Block",
                    "src": "5569:133:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 367,
                              "name": "uniqueTokensStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "5634:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 369,
                            "indexExpression": {
                              "id": 368,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "5653:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5634:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 370,
                                "name": "uniqueTokensStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "5662:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 372,
                              "indexExpression": {
                                "id": 371,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "5681:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5662:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5690:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5662:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5634:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 376,
                        "nodeType": "ExpressionStatement",
                        "src": "5634:57:4"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateUniqueTokensStaked",
            "nameLocation": "5454:24:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5487:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "5479:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5479:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5502:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "5494:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5494:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5478:31:4"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5519:0:4"
            },
            "scope": 427,
            "src": "5445:263:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "5822:43:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 390,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "5851:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 387,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "5832:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5832:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5832:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "5832:26:4"
                }
              ]
            },
            "functionSelector": "171e44ea",
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 385,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 384,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "5812:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5812:9:4"
              }
            ],
            "name": "addAllowedTokens",
            "nameLocation": "5772:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5797:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "5789:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5789:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5788:16:4"
            },
            "returnParameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5822:0:4"
            },
            "scope": 427,
            "src": "5763:102:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "5933:355:4",
              "statements": [
                {
                  "body": {
                    "id": 421,
                    "nodeType": "Block",
                    "src": "6143:117:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 412,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "6161:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 414,
                            "indexExpression": {
                              "id": 413,
                              "name": "allowedTokensIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 402,
                              "src": "6175:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6161:33:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 415,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 396,
                            "src": "6198:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6161:43:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 420,
                        "nodeType": "IfStatement",
                        "src": "6157:93:4",
                        "trueBody": {
                          "id": 419,
                          "nodeType": "Block",
                          "src": "6206:44:4",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6231:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 400,
                              "id": 418,
                              "nodeType": "Return",
                              "src": "6224:11:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 405,
                      "name": "allowedTokensIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "6057:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 406,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "6078:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6078:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6057:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 422,
                  "initializationExpression": {
                    "assignments": [
                      402
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 402,
                        "mutability": "mutable",
                        "name": "allowedTokensIndex",
                        "nameLocation": "6021:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 422,
                        "src": "6013:26:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6013:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 404,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6042:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6013:30:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6112:20:4",
                      "subExpression": {
                        "id": 409,
                        "name": "allowedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "6112:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 411,
                    "nodeType": "ExpressionStatement",
                    "src": "6112:20:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "5995:265:4"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6276:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 400,
                  "id": 424,
                  "nodeType": "Return",
                  "src": "6269:12:4"
                }
              ]
            },
            "functionSelector": "dd5b8467",
            "id": 426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "5880:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5903:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "5895:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5895:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5894:16:4"
            },
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "5927:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5927:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5926:6:4"
            },
            "scope": 427,
            "src": "5871:417:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 428,
        "src": "378:5912:4",
        "usedErrors": []
      }
    ],
    "src": "32:6259:4"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161108b38038061108b83398101604081905261002f916100ad565b6100383361005d565b600680546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610f9f806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063877dd39d116100a2578063b83e023411610071578063b83e023414610255578063dd5b846714610275578063f1c5d6c214610298578063f2fde38b146102c0578063fd5e6dd1146102d357600080fd5b8063877dd39d146102165780638da5cb5b14610229578063a1ee8c781461023a578063af3f5e221461024257600080fd5b806329161a00116100e957806329161a00146101aa5780632d1ad8b8146101d55780635e5f2e26146101e85780635eb186f8146101fb578063715018a61461020e57600080fd5b80630bea440d1461011b578063171e44ea14610130578063276b11da1461014357806327927b3e14610169575b600080fd5b61012e610129366004610c4f565b6102e6565b005b61012e61013e366004610c7b565b6104bd565b610156610151366004610c9d565b610539565b6040519081526020015b60405180910390f35b610192610177366004610c7b565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610160565b6101566101b8366004610c9d565b600160209081526000928352604080842090915290825290205481565b61012e6101e3366004610c7b565b6105c0565b6101926101f6366004610cc7565b6106f0565b600654610192906001600160a01b031681565b61012e61071a565b61012e610224366004610c9d565b610750565b6000546001600160a01b0316610192565b61012e6107a8565b610156610250366004610c7b565b6108a5565b610156610263366004610c7b565b60026020526000908152604090205481565b610288610283366004610c7b565b610966565b6040519015158152602001610160565b6102ab6102a6366004610c7b565b6109cf565b60408051928352602083019190915201610160565b61012e6102ce366004610c7b565b610ad0565b6101926102e1366004610cc7565b610b68565b6000821161033b5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468656e203000000060448201526064015b60405180910390fd5b61034481610966565b6103905760405162461bcd60e51b815260206004820181905260248201527f546f6b656e2069732063757272656e746c79206e6f7420616c6c6f77656421216044820152606401610332565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104079190610ce0565b506104123382610b78565b6001600160a01b0381166000908152600160209081526040808320338452909152902054610441908390610d18565b6001600160a01b0382166000908152600160208181526040808420338552825280842094909455600290529190205490036104b957600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916331790555b5050565b6000546001600160a01b031633146104e75760405162461bcd60e51b815260040161033290610d30565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03821660009081526002602052604081205461055e575060006105ba565b60008061056a846109cf565b909250905061057a81600a610e49565b6001600160a01b038086166000908152600160209081526040808320938a16835292905220546105ab908490610e55565b6105b59190610e74565b925050505b92915050565b6001600160a01b0381166000908152600160209081526040808320338452909152902054806106315760405162461bcd60e51b815260206004820152601f60248201527f5374616b696e672062616c616e63652063616e6e6e6f74206265207a65726f006044820152606401610332565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af115801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a29190610ce0565b506001600160a01b038216600090815260016020818152604080842033855282528084208490556002909152909120546106dc9190610e96565b336000908152600260205260409020555050565b6004818154811061070057600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146107445760405162461bcd60e51b815260040161033290610d30565b61074e6000610be3565b565b6000546001600160a01b0316331461077a5760405162461bcd60e51b815260040161033290610d30565b6001600160a01b03918216600090815260056020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260040161033290610d30565b60005b6003548110156108a2576000600382815481106107f4576107f4610ead565b60009182526020822001546001600160a01b03169150610813826108a5565b60065460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c9190610ce0565b505050808061089a90610ec3565b9150506107d5565b50565b6001600160a01b03811660009081526002602052604081205481906109035760405162461bcd60e51b81526020600482015260146024820152734e4f20746f6b656e73207374616b65642021212160601b6044820152606401610332565b60005b60045481101561095f57610941846004838154811061092757610927610ead565b6000918252602090912001546001600160a01b0316610539565b61094b9083610d18565b91508061095781610ec3565b915050610906565b5092915050565b6000805b6004548110156109c657826001600160a01b03166004828154811061099157610991610ead565b6000918252602090912001546001600160a01b0316036109b45750600192915050565b806109be81610ec3565b91505061096a565b50600092915050565b6001600160a01b03808216600090815260056020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a549190610ef6565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe9190610f46565b919760ff909216965090945050505050565b6000546001600160a01b03163314610afa5760405162461bcd60e51b815260040161033290610d30565b6001600160a01b038116610b5f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610332565b6108a281610be3565b6003818154811061070057600080fd5b6001600160a01b038082166000908152600160209081526040808320938616835292905220546104b9576001600160a01b038216600090815260026020526040902054610bc6906001610d18565b6001600160a01b0383166000908152600260205260409020555050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610c4a57600080fd5b919050565b60008060408385031215610c6257600080fd5b82359150610c7260208401610c33565b90509250929050565b600060208284031215610c8d57600080fd5b610c9682610c33565b9392505050565b60008060408385031215610cb057600080fd5b610cb983610c33565b9150610c7260208401610c33565b600060208284031215610cd957600080fd5b5035919050565b600060208284031215610cf257600080fd5b81518015158114610c9657600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610d2b57610d2b610d02565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181815b80851115610da0578160001904821115610d8657610d86610d02565b80851615610d9357918102915b93841c9390800290610d6a565b509250929050565b600082610db7575060016105ba565b81610dc4575060006105ba565b8160018114610dda5760028114610de457610e00565b60019150506105ba565b60ff841115610df557610df5610d02565b50506001821b6105ba565b5060208310610133831016604e8410600b8410161715610e23575081810a6105ba565b610e2d8383610d65565b8060001904821115610e4157610e41610d02565b029392505050565b6000610c968383610da8565b6000816000190483118215151615610e6f57610e6f610d02565b500290565b600082610e9157634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610ea857610ea8610d02565b500390565b634e487b7160e01b600052603260045260246000fd5b600060018201610ed557610ed5610d02565b5060010190565b805169ffffffffffffffffffff81168114610c4a57600080fd5b600080600080600060a08688031215610f0e57600080fd5b610f1786610edc565b9450602086015193506040860151925060608601519150610f3a60808701610edc565b90509295509295909350565b600060208284031215610f5857600080fd5b815160ff81168114610c9657600080fdfea26469706673582212202a99cb4431c8202d0f705da454f9e6a22dbbd9c1faf539855919b65a66f65e9064736f6c634300080d0033",
  "bytecodeSha1": "fcd8c9354faf2319d8badc655a373580136fb75d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "TokenFarm",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "37": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "TokenFarm.stakeTokens": {
          "32": [
            4140,
            4151,
            true
          ],
          "33": [
            4246,
            4268,
            true
          ],
          "34": [
            4793,
            4828,
            false
          ]
        },
        "TokenFarm.tokenIsAllowed": {
          "36": [
            6161,
            6204,
            false
          ]
        },
        "TokenFarm.unstakeTokens": {
          "35": [
            5041,
            5052,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "30": [
            2131,
            2148
          ],
          "31": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "15": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "27": [
            1926,
            1999
          ],
          "28": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "7": [
            659,
            676
          ]
        }
      },
      "3": {},
      "4": {
        "TokenFarm.addAllowedTokens": {
          "8": [
            5832,
            5858
          ]
        },
        "TokenFarm.getTokenValue": {
          "26": [
            3905,
            3938
          ]
        },
        "TokenFarm.getUserSingleTokenValue": {
          "9": [
            3041,
            3049
          ],
          "10": [
            3225,
            3290
          ]
        },
        "TokenFarm.getUserTotalValue": {
          "19": [
            2208,
            2270
          ],
          "20": [
            2439,
            2619
          ],
          "21": [
            2395,
            2414
          ],
          "22": [
            2639,
            2656
          ]
        },
        "TokenFarm.issueToken": {
          "17": [
            1704,
            1749
          ],
          "18": [
            1498,
            1512
          ]
        },
        "TokenFarm.setPriceFeedContract": {
          "16": [
            1230,
            1272
          ]
        },
        "TokenFarm.stakeTokens": {
          "1": [
            4132,
            4185
          ],
          "2": [
            4238,
            4305
          ],
          "3": [
            4506,
            4569
          ],
          "4": [
            4579,
            4623
          ],
          "5": [
            4633,
            4738
          ],
          "6": [
            4844,
            4868
          ]
        },
        "TokenFarm.tokenIsAllowed": {
          "23": [
            6224,
            6235
          ],
          "24": [
            6112,
            6132
          ],
          "25": [
            6269,
            6281
          ]
        },
        "TokenFarm.unstakeTokens": {
          "11": [
            5033,
            5088
          ],
          "12": [
            5098,
            5142
          ],
          "13": [
            5152,
            5190
          ],
          "14": [
            5245,
            5312
          ]
        },
        "TokenFarm.updateUniqueTokensStaked": {
          "29": [
            5634,
            5691
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063877dd39d116100a2578063b83e023411610071578063b83e023414610255578063dd5b846714610275578063f1c5d6c214610298578063f2fde38b146102c0578063fd5e6dd1146102d357600080fd5b8063877dd39d146102165780638da5cb5b14610229578063a1ee8c781461023a578063af3f5e221461024257600080fd5b806329161a00116100e957806329161a00146101aa5780632d1ad8b8146101d55780635e5f2e26146101e85780635eb186f8146101fb578063715018a61461020e57600080fd5b80630bea440d1461011b578063171e44ea14610130578063276b11da1461014357806327927b3e14610169575b600080fd5b61012e610129366004610c4f565b6102e6565b005b61012e61013e366004610c7b565b6104bd565b610156610151366004610c9d565b610539565b6040519081526020015b60405180910390f35b610192610177366004610c7b565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610160565b6101566101b8366004610c9d565b600160209081526000928352604080842090915290825290205481565b61012e6101e3366004610c7b565b6105c0565b6101926101f6366004610cc7565b6106f0565b600654610192906001600160a01b031681565b61012e61071a565b61012e610224366004610c9d565b610750565b6000546001600160a01b0316610192565b61012e6107a8565b610156610250366004610c7b565b6108a5565b610156610263366004610c7b565b60026020526000908152604090205481565b610288610283366004610c7b565b610966565b6040519015158152602001610160565b6102ab6102a6366004610c7b565b6109cf565b60408051928352602083019190915201610160565b61012e6102ce366004610c7b565b610ad0565b6101926102e1366004610cc7565b610b68565b6000821161033b5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468656e203000000060448201526064015b60405180910390fd5b61034481610966565b6103905760405162461bcd60e51b815260206004820181905260248201527f546f6b656e2069732063757272656e746c79206e6f7420616c6c6f77656421216044820152606401610332565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104079190610ce0565b506104123382610b78565b6001600160a01b0381166000908152600160209081526040808320338452909152902054610441908390610d18565b6001600160a01b0382166000908152600160208181526040808420338552825280842094909455600290529190205490036104b957600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916331790555b5050565b6000546001600160a01b031633146104e75760405162461bcd60e51b815260040161033290610d30565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03821660009081526002602052604081205461055e575060006105ba565b60008061056a846109cf565b909250905061057a81600a610e49565b6001600160a01b038086166000908152600160209081526040808320938a16835292905220546105ab908490610e55565b6105b59190610e74565b925050505b92915050565b6001600160a01b0381166000908152600160209081526040808320338452909152902054806106315760405162461bcd60e51b815260206004820152601f60248201527f5374616b696e672062616c616e63652063616e6e6e6f74206265207a65726f006044820152606401610332565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af115801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a29190610ce0565b506001600160a01b038216600090815260016020818152604080842033855282528084208490556002909152909120546106dc9190610e96565b336000908152600260205260409020555050565b6004818154811061070057600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146107445760405162461bcd60e51b815260040161033290610d30565b61074e6000610be3565b565b6000546001600160a01b0316331461077a5760405162461bcd60e51b815260040161033290610d30565b6001600160a01b03918216600090815260056020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260040161033290610d30565b60005b6003548110156108a2576000600382815481106107f4576107f4610ead565b60009182526020822001546001600160a01b03169150610813826108a5565b60065460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c9190610ce0565b505050808061089a90610ec3565b9150506107d5565b50565b6001600160a01b03811660009081526002602052604081205481906109035760405162461bcd60e51b81526020600482015260146024820152734e4f20746f6b656e73207374616b65642021212160601b6044820152606401610332565b60005b60045481101561095f57610941846004838154811061092757610927610ead565b6000918252602090912001546001600160a01b0316610539565b61094b9083610d18565b91508061095781610ec3565b915050610906565b5092915050565b6000805b6004548110156109c657826001600160a01b03166004828154811061099157610991610ead565b6000918252602090912001546001600160a01b0316036109b45750600192915050565b806109be81610ec3565b91505061096a565b50600092915050565b6001600160a01b03808216600090815260056020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a549190610ef6565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe9190610f46565b919760ff909216965090945050505050565b6000546001600160a01b03163314610afa5760405162461bcd60e51b815260040161033290610d30565b6001600160a01b038116610b5f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610332565b6108a281610be3565b6003818154811061070057600080fd5b6001600160a01b038082166000908152600160209081526040808320938616835292905220546104b9576001600160a01b038216600090815260026020526040902054610bc6906001610d18565b6001600160a01b0383166000908152600260205260409020555050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610c4a57600080fd5b919050565b60008060408385031215610c6257600080fd5b82359150610c7260208401610c33565b90509250929050565b600060208284031215610c8d57600080fd5b610c9682610c33565b9392505050565b60008060408385031215610cb057600080fd5b610cb983610c33565b9150610c7260208401610c33565b600060208284031215610cd957600080fd5b5035919050565b600060208284031215610cf257600080fd5b81518015158114610c9657600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610d2b57610d2b610d02565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181815b80851115610da0578160001904821115610d8657610d86610d02565b80851615610d9357918102915b93841c9390800290610d6a565b509250929050565b600082610db7575060016105ba565b81610dc4575060006105ba565b8160018114610dda5760028114610de457610e00565b60019150506105ba565b60ff841115610df557610df5610d02565b50506001821b6105ba565b5060208310610133831016604e8410600b8410161715610e23575081810a6105ba565b610e2d8383610d65565b8060001904821115610e4157610e41610d02565b029392505050565b6000610c968383610da8565b6000816000190483118215151615610e6f57610e6f610d02565b500290565b600082610e9157634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610ea857610ea8610d02565b500390565b634e487b7160e01b600052603260045260246000fd5b600060018201610ed557610ed5610d02565b5060010190565b805169ffffffffffffffffffff81168114610c4a57600080fd5b600080600080600060a08688031215610f0e57600080fd5b610f1786610edc565b9450602086015193506040860151925060608601519150610f3a60808701610edc565b90509295509295909350565b600060208284031215610f5857600080fd5b815160ff81168114610c9657600080fdfea26469706673582212202a99cb4431c8202d0f705da454f9e6a22dbbd9c1faf539855919b65a66f65e9064736f6c634300080d0033",
  "deployedSourceMap": "378:5912:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3992:893;;;;;;:::i;:::-;;:::i;:::-;;5763:102;;;;;;:::i;:::-;;:::i;2757:540::-;;;;;;:::i;:::-;;:::i;:::-;;;1053:25:5;;;1041:2;1026:18;2757:540:4;;;;;;;;889:56;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;889:56:4;;;;;;-1:-1:-1;;;;;1253:32:5;;;1235:51;;1223:2;1208:18;889:56:4;1089:203:5;518:69:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4915:524;;;;;;:::i;:::-;;:::i;817:30::-;;;;;;:::i;:::-;;:::i;981:23::-;;;;;-1:-1:-1;;;;;981:23:4;;;1605:92:0;;;:::i;1117:162:4:-;;;;;;:::i;:::-;;:::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;1307:763:4;;;:::i;2094:569::-;;;;;;:::i;:::-;;:::i;682:53::-;;;;;;:::i;:::-;;;;;;;;;;;;;;5871:417;;;;;;:::i;:::-;;:::i;:::-;;;1869:14:5;;1862:22;1844:41;;1832:2;1817:18;5871:417:4;1704:187:5;3325:620:4;;;;;;:::i;:::-;;:::i;:::-;;;;2070:25:5;;;2126:2;2111:18;;2104:34;;;;2043:18;3325:620:4;1896:248:5;1846:189:0;;;;;;:::i;:::-;;:::i;761:24:4:-;;;;;;:::i;:::-;;:::i;3992:893::-;4150:1;4140:7;:11;4132:53;;;;-1:-1:-1;;;4132:53:4;;2351:2:5;4132:53:4;;;2333:21:5;2390:2;2370:18;;;2363:30;2429:31;2409:18;;;2402:59;2478:18;;4132:53:4;;;;;;;;;4246:22;4261:6;4246:14;:22::i;:::-;4238:67;;;;-1:-1:-1;;;4238:67:4;;2709:2:5;4238:67:4;;;2691:21:5;;;2728:18;;;2721:30;2787:34;2767:18;;;2760:62;2839:18;;4238:67:4;2507:356:5;4238:67:4;4506:63;;-1:-1:-1;;;4506:63:4;;4534:10;4506:63;;;3108:34:5;4554:4:4;3158:18:5;;;3151:43;3210:18;;;3203:34;;;-1:-1:-1;;;;;4506:27:4;;;;;3043:18:5;;4506:63:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4579:44;4604:10;4616:6;4579:24;:44::i;:::-;-1:-1:-1;;;;;4682:22:4;;;;;;:14;:22;;;;;;;;4705:10;4682:34;;;;;;;;:56;;4731:7;;4682:56;:::i;:::-;-1:-1:-1;;;;;4633:22:4;;;;;;:14;:22;;;;;;;;4656:10;4633:34;;;;;;;:105;;;;4793:18;:30;;;;;;:35;;4789:90;;4844:7;:24;;;;;;;-1:-1:-1;4844:24:4;;;;;;;;-1:-1:-1;;;;;;4844:24:4;4857:10;4844:24;;;4789:90;3992:893;;:::o;5763:102::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;5832:13:4::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5832:26:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;5832:26:4::1;-1:-1:-1::0;;;;;5832:26:4;;;::::1;::::0;;;::::1;::::0;;5763:102::o;2757:540::-;-1:-1:-1;;;;;2995:25:4;;2866:7;2995:25;;;:18;:25;;;;;;2991:69;;-1:-1:-1;3048:1:4;3041:8;;2991:69;3159:13;3174:16;3194:21;3208:6;3194:13;:21::i;:::-;3158:57;;-1:-1:-1;3158:57:4;-1:-1:-1;3276:12:4;3158:57;3276:2;:12;:::i;:::-;-1:-1:-1;;;;;3235:22:4;;;;;;;:14;:22;;;;;;;;:29;;;;;;;;;;:37;;3267:5;;3235:37;:::i;:::-;3234:54;;;;:::i;:::-;3225:65;;;;2757:540;;;;;:::o;4915:524::-;-1:-1:-1;;;;;4989:22:4;;4971:15;4989:22;;;:14;:22;;;;;;;;5012:10;4989:34;;;;;;;;5041:11;5033:55;;;;-1:-1:-1;;;5033:55:4;;6127:2:5;5033:55:4;;;6109:21:5;6166:2;6146:18;;;6139:30;6205:33;6185:18;;;6178:61;6256:18;;5033:55:4;5925:355:5;5033:55:4;5098:44;;-1:-1:-1;;;5098:44:4;;5122:10;5098:44;;;6459:51:5;6526:18;;;6519:34;;;-1:-1:-1;;;;;5098:23:4;;;;;6432:18:5;;5098:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5152:22:4;;5189:1;5152:22;;;:14;:22;;;;;;;;5175:10;5152:34;;;;;;;:38;;;5278:18;:30;;;;;;;:34;;5152:14;5278:34;:::i;:::-;5264:10;5245:30;;;;:18;:30;;;;;:67;-1:-1:-1;;4915:524:4:o;817:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;817:30:4;;-1:-1:-1;817:30:4;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;1117:162:4:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1230:29:4;;::::1;;::::0;;;:21:::1;:29;::::0;;;;:42;;-1:-1:-1;;;;;;1230:42:4::1;::::0;;;::::1;;::::0;;1117:162::o;1307:763::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1417:20:4::1;1399:665;1470:7;:14:::0;1455:29;::::1;1399:665;;;1582:17;1602:7;1610:12;1602:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;1602:21:4::1;::::0;-1:-1:-1;1662:28:4::1;1602:21:::0;1662:17:::1;:28::i;:::-;1704:9;::::0;:45:::1;::::0;-1:-1:-1;;;1704:45:4;;-1:-1:-1;;;;;6477:32:5;;;1704:45:4::1;::::0;::::1;6459:51:5::0;6526:18;;;6519:34;;;1637:53:4;;-1:-1:-1;1704:9:4;::::1;::::0;:18:::1;::::0;6432::5;;1704:45:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1523:541;;1498:14;;;;;:::i;:::-;;;;1399:665;;;;1307:763::o:0;2094:569::-;-1:-1:-1;;;;;2216:25:4;;2157:7;2216:25;;;:18;:25;;;;;;2157:7;;2208:62;;;;-1:-1:-1;;;2208:62:4;;7168:2:5;2208:62:4;;;7150:21:5;7207:2;7187:18;;;7180:30;-1:-1:-1;;;7226:18:5;;;7219:50;7286:18;;2208:62:4;6966:344:5;2208:62:4;2298:25;2280:350;2361:13;:20;2341:40;;2280:350;;;2497:122;2542:5;2569:13;2583:17;2569:32;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2569:32:4;2497:23;:122::i;:::-;2468:151;;:10;:151;:::i;:::-;2439:180;-1:-1:-1;2395:19:4;;;;:::i;:::-;;;;2280:350;;;-1:-1:-1;2646:10:4;2094:569;-1:-1:-1;;2094:569:4:o;5871:417::-;5927:4;;5995:265;6078:13;:20;6057:41;;5995:265;;;6198:6;-1:-1:-1;;;;;6161:43:4;:13;6175:18;6161:33;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6161:33:4;:43;6157:93;;-1:-1:-1;6231:4:4;;5871:417;-1:-1:-1;;5871:417:4:o;6157:93::-;6112:20;;;;:::i;:::-;;;;5995:265;;;-1:-1:-1;6276:5:4;;5871:417;-1:-1:-1;;5871:417:4:o;3325:620::-;-1:-1:-1;;;;;3553:29:4;;;3409:7;3553:29;;;:21;:29;;;;;;;3775:27;;-1:-1:-1;;;3775:27:4;;;;3409:7;;;;3553:29;;;;;3409:7;;3553:29;;3775:25;;:27;;;;;;;;;;;;;;;3553:29;3775:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3750:52;;;;;;3847:16;3874:9;-1:-1:-1;;;;;3874:18:4;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3921:5;;3866:29;;;;;-1:-1:-1;3921:5:4;;-1:-1:-1;;;;;3325:620:4:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;8457:2:5;1926:73:0::1;::::0;::::1;8439:21:5::0;8496:2;8476:18;;;8469:30;8535:34;8515:18;;;8508:62;-1:-1:-1;;;8586:18:5;;;8579:36;8632:19;;1926:73:0::1;8255:402:5::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;761:24:4:-:0;;;;;;;;;;;;5445:263;-1:-1:-1;;;;;5533:22:4;;;5566:1;5533:22;;;:14;:22;;;;;;;;:29;;;;;;;;;;5529:173;;-1:-1:-1;;;;;5662:25:4;;;;;;:18;:25;;;;;;:29;;5690:1;5662:29;:::i;:::-;-1:-1:-1;;;;;5634:25:4;;;;;;:18;:25;;;;;:57;5445:263;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;451:186::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;602:29;621:9;602:29;:::i;:::-;592:39;451:186;-1:-1:-1;;;451:186:5:o;642:260::-;710:6;718;771:2;759:9;750:7;746:23;742:32;739:52;;;787:1;784;777:12;739:52;810:29;829:9;810:29;:::i;:::-;800:39;;858:38;892:2;881:9;877:18;858:38;:::i;1297:180::-;1356:6;1409:2;1397:9;1388:7;1384:23;1380:32;1377:52;;;1425:1;1422;1415:12;1377:52;-1:-1:-1;1448:23:5;;1297:180;-1:-1:-1;1297:180:5:o;3248:277::-;3315:6;3368:2;3356:9;3347:7;3343:23;3339:32;3336:52;;;3384:1;3381;3374:12;3336:52;3416:9;3410:16;3469:5;3462:13;3455:21;3448:5;3445:32;3435:60;;3491:1;3488;3481:12;3530:127;3591:10;3586:3;3582:20;3579:1;3572:31;3622:4;3619:1;3612:15;3646:4;3643:1;3636:15;3662:128;3702:3;3733:1;3729:6;3726:1;3723:13;3720:39;;;3739:18;;:::i;:::-;-1:-1:-1;3775:9:5;;3662:128::o;3795:356::-;3997:2;3979:21;;;4016:18;;;4009:30;4075:34;4070:2;4055:18;;4048:62;4142:2;4127:18;;3795:356::o;4156:422::-;4245:1;4288:5;4245:1;4302:270;4323:7;4313:8;4310:21;4302:270;;;4382:4;4378:1;4374:6;4370:17;4364:4;4361:27;4358:53;;;4391:18;;:::i;:::-;4441:7;4431:8;4427:22;4424:55;;;4461:16;;;;4424:55;4540:22;;;;4500:15;;;;4302:270;;;4306:3;4156:422;;;;;:::o;4583:806::-;4632:5;4662:8;4652:80;;-1:-1:-1;4703:1:5;4717:5;;4652:80;4751:4;4741:76;;-1:-1:-1;4788:1:5;4802:5;;4741:76;4833:4;4851:1;4846:59;;;;4919:1;4914:130;;;;4826:218;;4846:59;4876:1;4867:10;;4890:5;;;4914:130;4951:3;4941:8;4938:17;4935:43;;;4958:18;;:::i;:::-;-1:-1:-1;;5014:1:5;5000:16;;5029:5;;4826:218;;5128:2;5118:8;5115:16;5109:3;5103:4;5100:13;5096:36;5090:2;5080:8;5077:16;5072:2;5066:4;5063:12;5059:35;5056:77;5053:159;;;-1:-1:-1;5165:19:5;;;5197:5;;5053:159;5244:34;5269:8;5263:4;5244:34;:::i;:::-;5314:6;5310:1;5306:6;5302:19;5293:7;5290:32;5287:58;;;5325:18;;:::i;:::-;5363:20;;4583:806;-1:-1:-1;;;4583:806:5:o;5394:131::-;5454:5;5483:36;5510:8;5504:4;5483:36;:::i;5530:168::-;5570:7;5636:1;5632;5628:6;5624:14;5621:1;5618:21;5613:1;5606:9;5599:17;5595:45;5592:71;;;5643:18;;:::i;:::-;-1:-1:-1;5683:9:5;;5530:168::o;5703:217::-;5743:1;5769;5759:132;;5813:10;5808:3;5804:20;5801:1;5794:31;5848:4;5845:1;5838:15;5876:4;5873:1;5866:15;5759:132;-1:-1:-1;5905:9:5;;5703:217::o;6564:125::-;6604:4;6632:1;6629;6626:8;6623:34;;;6637:18;;:::i;:::-;-1:-1:-1;6674:9:5;;6564:125::o;6694:127::-;6755:10;6750:3;6746:20;6743:1;6736:31;6786:4;6783:1;6776:15;6810:4;6807:1;6800:15;6826:135;6865:3;6886:17;;;6883:43;;6906:18;;:::i;:::-;-1:-1:-1;6953:1:5;6942:13;;6826:135::o;7315:179::-;7393:13;;7446:22;7435:34;;7425:45;;7415:73;;7484:1;7481;7474:12;7499:473;7602:6;7610;7618;7626;7634;7687:3;7675:9;7666:7;7662:23;7658:33;7655:53;;;7704:1;7701;7694:12;7655:53;7727:39;7756:9;7727:39;:::i;:::-;7717:49;;7806:2;7795:9;7791:18;7785:25;7775:35;;7850:2;7839:9;7835:18;7829:25;7819:35;;7894:2;7883:9;7879:18;7873:25;7863:35;;7917:49;7961:3;7950:9;7946:19;7917:49;:::i;:::-;7907:59;;7499:473;;;;;;;;:::o;7977:273::-;8045:6;8098:2;8086:9;8077:7;8073:23;8069:32;8066:52;;;8114:1;8111;8104:12;8066:52;8146:9;8140:16;8196:4;8189:5;8185:16;8178:5;8175:27;8165:55;;8216:1;8213;8206:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    378,
    6290
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x877DD39D GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB83E0234 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB83E0234 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xF1C5D6C2 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x877DD39D EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xA1EE8C78 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xAF3F5E22 EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29161A00 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x29161A00 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x2D1AD8B8 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBEA440D EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x171E44EA EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x276B11DA EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x27927B3E EQ PUSH2 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x71A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468656E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x344 DUP2 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2069732063757272656E746C79206E6F7420616C6C6F7765642121 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0xCE0 JUMP JUMPDEST POP PUSH2 0x412 CALLER DUP3 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x441 SWAP1 DUP4 SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x2 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x4B9 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x55E JUMPI POP PUSH1 0x0 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x56A DUP5 PUSH2 0x9CF JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x57A DUP2 PUSH1 0xA PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x5AB SWAP1 DUP5 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x631 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E672062616C616E63652063616E6E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0xCE0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x74E PUSH1 0x0 PUSH2 0xBE3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x77A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7F4 JUMPI PUSH2 0x7F4 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x813 DUP3 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x868 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88C SWAP2 SWAP1 PUSH2 0xCE0 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x89A SWAP1 PUSH2 0xEC3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7D5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E4F20746F6B656E73207374616B656420212121 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x95F JUMPI PUSH2 0x941 DUP5 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x927 JUMPI PUSH2 0x927 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x539 JUMP JUMPDEST PUSH2 0x94B SWAP1 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x957 DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x906 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x9C6 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x991 JUMPI PUSH2 0x991 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x9B4 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x9BE DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x96A JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABE SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST SWAP2 SWAP8 PUSH1 0xFF SWAP1 SWAP3 AND SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x8A2 DUP2 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x4B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBC6 SWAP1 PUSH1 0x1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xC72 PUSH1 0x20 DUP5 ADD PUSH2 0xC33 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC96 DUP3 PUSH2 0xC33 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB9 DUP4 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP PUSH2 0xC72 PUSH1 0x20 DUP5 ADD PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD2B JUMPI PUSH2 0xD2B PUSH2 0xD02 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xDA0 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xD86 JUMPI PUSH2 0xD86 PUSH2 0xD02 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xD93 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xD6A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDB7 JUMPI POP PUSH1 0x1 PUSH2 0x5BA JUMP JUMPDEST DUP2 PUSH2 0xDC4 JUMPI POP PUSH1 0x0 PUSH2 0x5BA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xDDA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xDE4 JUMPI PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x5BA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDF5 PUSH2 0xD02 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x5BA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE23 JUMPI POP DUP2 DUP2 EXP PUSH2 0x5BA JUMP JUMPDEST PUSH2 0xE2D DUP4 DUP4 PUSH2 0xD65 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH2 0xD02 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC96 DUP4 DUP4 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0xD02 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE91 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA8 PUSH2 0xD02 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xED5 JUMPI PUSH2 0xED5 PUSH2 0xD02 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF17 DUP7 PUSH2 0xEDC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF3A PUSH1 0x80 DUP8 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A SWAP10 0xCB DIFFICULTY BALANCE 0xC8 KECCAK256 0x2D 0xF PUSH17 0x5DA454F9E6A22DBBD9C1FAF539855919B6 GAS PUSH7 0xF65E9064736F6C PUSH4 0x4300080D STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        378,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x877DD39D"
    },
    "38": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB83E0234"
    },
    "49": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB83E0234"
    },
    "60": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x255"
    },
    "64": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD5B8467"
    },
    "71": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x275"
    },
    "75": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF1C5D6C2"
    },
    "82": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x298"
    },
    "86": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C0"
    },
    "97": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFD5E6DD1"
    },
    "104": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D3"
    },
    "108": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x877DD39D"
    },
    "120": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x216"
    },
    "124": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x229"
    },
    "135": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA1EE8C78"
    },
    "142": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23A"
    },
    "146": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAF3F5E22"
    },
    "153": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x242"
    },
    "157": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "161": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "REVERT",
      "path": "4"
    },
    "162": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "163": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "164": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x29161A00"
    },
    "169": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "GT",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x29161A00"
    },
    "180": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AA"
    },
    "184": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2D1AD8B8"
    },
    "191": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D5"
    },
    "195": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5E5F2E26"
    },
    "202": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E8"
    },
    "206": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5EB186F8"
    },
    "213": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FB"
    },
    "217": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "224": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20E"
    },
    "228": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "232": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "REVERT",
      "path": "4"
    },
    "233": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "234": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "235": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xBEA440D"
    },
    "240": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "241": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "245": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "246": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x171E44EA"
    },
    "251": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x130"
    },
    "255": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "256": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "257": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x276B11DA"
    },
    "262": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "263": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x143"
    },
    "266": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "267": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "268": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x27927B3E"
    },
    "273": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "EQ",
      "path": "4"
    },
    "274": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x169"
    },
    "277": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        378,
        6290
      ],
      "op": "REVERT",
      "path": "4"
    },
    "283": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "284": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "287": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x129"
    },
    "290": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "291": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "293": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC4F"
    },
    "296": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        3992,
        4885
      ],
      "op": "JUMP",
      "path": "4"
    },
    "297": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "298": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E6"
    },
    "301": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        3992,
        4885
      ],
      "op": "JUMP",
      "path": "4"
    },
    "302": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "303": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "STOP",
      "path": "4"
    },
    "304": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5763,
        5865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "305": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5763,
        5865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "308": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5763,
        5865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13E"
    },
    "311": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5763,
        5865
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "312": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5763,
        5865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "314": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5763,
        5865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7B"
    },
    "317": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "i",
      "offset": [
        5763,
        5865
      ],
      "op": "JUMP",
      "path": "4"
    },
    "318": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5763,
        5865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "319": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5763,
        5865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BD"
    },
    "322": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "i",
      "offset": [
        5763,
        5865
      ],
      "op": "JUMP",
      "path": "4"
    },
    "323": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "324": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x156"
    },
    "327": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x151"
    },
    "330": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "331": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "333": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC9D"
    },
    "336": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        2757,
        3297
      ],
      "op": "JUMP",
      "path": "4"
    },
    "337": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "338": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x539"
    },
    "341": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        2757,
        3297
      ],
      "op": "JUMP",
      "path": "4"
    },
    "342": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "343": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "345": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "346": {
      "op": "SWAP1"
    },
    "347": {
      "op": "DUP2"
    },
    "348": {
      "op": "MSTORE"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "353": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "355": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "356": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "DUP1",
      "path": "4"
    },
    "357": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "358": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "SUB",
      "path": "4"
    },
    "359": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "360": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "RETURN",
      "path": "4"
    },
    "361": {
      "offset": [
        889,
        945
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "362": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x192"
    },
    "365": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x177"
    },
    "368": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "369": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "371": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7B"
    },
    "374": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        889,
        945
      ],
      "op": "JUMP",
      "path": "4"
    },
    "375": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "376": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "378": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "380": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "381": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "383": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "384": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "DUP2",
      "path": "4"
    },
    "385": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "386": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "388": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "389": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "390": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "offset": [
        889,
        945
      ],
      "op": "AND",
      "path": "4"
    },
    "400": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "DUP2",
      "path": "4"
    },
    "401": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "JUMP",
      "path": "4"
    },
    "402": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "403": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "405": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        889,
        945
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "op": "SWAP1"
    },
    "415": {
      "op": "SWAP2"
    },
    "416": {
      "op": "AND"
    },
    "417": {
      "op": "DUP2"
    },
    "418": {
      "op": "MSTORE"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "421": {
      "op": "ADD"
    },
    "422": {
      "offset": [
        889,
        945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160"
    },
    "425": {
      "op": "JUMP"
    },
    "426": {
      "offset": [
        518,
        587
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "427": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x156"
    },
    "430": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B8"
    },
    "433": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "434": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "436": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC9D"
    },
    "439": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        518,
        587
      ],
      "op": "JUMP",
      "path": "4"
    },
    "440": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "441": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "443": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "445": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "446": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "DUP2",
      "path": "4"
    },
    "447": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "448": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "450": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "451": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "DUP4",
      "path": "4"
    },
    "452": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "453": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "455": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "DUP1",
      "path": "4"
    },
    "456": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "DUP5",
      "path": "4"
    },
    "457": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "458": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "459": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "460": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "461": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "462": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "DUP3",
      "path": "4"
    },
    "463": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "464": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "465": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "466": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "467": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "DUP2",
      "path": "4"
    },
    "468": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        518,
        587
      ],
      "op": "JUMP",
      "path": "4"
    },
    "469": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4915,
        5439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "470": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4915,
        5439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "473": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4915,
        5439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E3"
    },
    "476": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4915,
        5439
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "477": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4915,
        5439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "479": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4915,
        5439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7B"
    },
    "482": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        4915,
        5439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "483": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4915,
        5439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "484": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4915,
        5439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C0"
    },
    "487": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        4915,
        5439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "488": {
      "offset": [
        817,
        847
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "489": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x192"
    },
    "492": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F6"
    },
    "495": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "496": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "498": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCC7"
    },
    "501": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        817,
        847
      ],
      "op": "JUMP",
      "path": "4"
    },
    "502": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "503": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F0"
    },
    "506": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        817,
        847
      ],
      "op": "JUMP",
      "path": "4"
    },
    "507": {
      "offset": [
        981,
        1004
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "508": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        981,
        1004
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "510": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        981,
        1004
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "511": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        981,
        1004
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x192"
    },
    "514": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        981,
        1004
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "521": {
      "op": "SHL"
    },
    "522": {
      "op": "SUB"
    },
    "523": {
      "offset": [
        981,
        1004
      ],
      "op": "AND",
      "path": "4"
    },
    "524": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        981,
        1004
      ],
      "op": "DUP2",
      "path": "4"
    },
    "525": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        981,
        1004
      ],
      "op": "JUMP",
      "path": "4"
    },
    "526": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "527": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "530": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71A"
    },
    "533": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "534": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1117,
        1279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "535": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1117,
        1279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "538": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1117,
        1279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x224"
    },
    "541": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1117,
        1279
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "542": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1117,
        1279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "544": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1117,
        1279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC9D"
    },
    "547": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "i",
      "offset": [
        1117,
        1279
      ],
      "op": "JUMP",
      "path": "4"
    },
    "548": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1117,
        1279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "549": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1117,
        1279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x750"
    },
    "552": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "i",
      "offset": [
        1117,
        1279
      ],
      "op": "JUMP",
      "path": "4"
    },
    "553": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "554": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "556": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "563": {
      "op": "SHL"
    },
    "564": {
      "op": "SUB"
    },
    "565": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "566": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x192"
    },
    "569": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "570": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1307,
        2070
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "571": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1307,
        2070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "574": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1307,
        2070
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7A8"
    },
    "577": {
      "fn": "TokenFarm.issueToken",
      "jump": "i",
      "offset": [
        1307,
        2070
      ],
      "op": "JUMP",
      "path": "4"
    },
    "578": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2094,
        2663
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "579": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2094,
        2663
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x156"
    },
    "582": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2094,
        2663
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x250"
    },
    "585": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2094,
        2663
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "586": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2094,
        2663
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "588": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2094,
        2663
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7B"
    },
    "591": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        2094,
        2663
      ],
      "op": "JUMP",
      "path": "4"
    },
    "592": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2094,
        2663
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "593": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2094,
        2663
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A5"
    },
    "596": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        2094,
        2663
      ],
      "op": "JUMP",
      "path": "4"
    },
    "597": {
      "offset": [
        682,
        735
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "598": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x156"
    },
    "601": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x263"
    },
    "604": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "605": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "607": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7B"
    },
    "610": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        682,
        735
      ],
      "op": "JUMP",
      "path": "4"
    },
    "611": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "612": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "614": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "616": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "617": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "619": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "620": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "621": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "622": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "624": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "625": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "626": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "627": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "628": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        682,
        735
      ],
      "op": "JUMP",
      "path": "4"
    },
    "629": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "630": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x288"
    },
    "633": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x283"
    },
    "636": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "637": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "639": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7B"
    },
    "642": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5871,
        6288
      ],
      "op": "JUMP",
      "path": "4"
    },
    "643": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "644": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x966"
    },
    "647": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5871,
        6288
      ],
      "op": "JUMP",
      "path": "4"
    },
    "648": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "649": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "651": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "652": {
      "op": "SWAP1"
    },
    "653": {
      "op": "ISZERO"
    },
    "654": {
      "op": "ISZERO"
    },
    "655": {
      "op": "DUP2"
    },
    "656": {
      "op": "MSTORE"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "659": {
      "op": "ADD"
    },
    "660": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160"
    },
    "663": {
      "op": "JUMP"
    },
    "664": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "665": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AB"
    },
    "668": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A6"
    },
    "671": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "672": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "674": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7B"
    },
    "677": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        3325,
        3945
      ],
      "op": "JUMP",
      "path": "4"
    },
    "678": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "679": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9CF"
    },
    "682": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        3325,
        3945
      ],
      "op": "JUMP",
      "path": "4"
    },
    "683": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "684": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "686": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "DUP1",
      "path": "4"
    },
    "687": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "688": {
      "op": "SWAP3"
    },
    "689": {
      "op": "DUP4"
    },
    "690": {
      "op": "MSTORE"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "693": {
      "op": "DUP4"
    },
    "694": {
      "op": "ADD"
    },
    "695": {
      "op": "SWAP2"
    },
    "696": {
      "op": "SWAP1"
    },
    "697": {
      "op": "SWAP2"
    },
    "698": {
      "op": "MSTORE"
    },
    "699": {
      "op": "ADD"
    },
    "700": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160"
    },
    "703": {
      "op": "JUMP"
    },
    "704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "705": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "708": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE"
    },
    "711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "714": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7B"
    },
    "717": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD0"
    },
    "722": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "723": {
      "offset": [
        761,
        785
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "724": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x192"
    },
    "727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E1"
    },
    "730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "731": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "733": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCC7"
    },
    "736": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        761,
        785
      ],
      "op": "JUMP",
      "path": "4"
    },
    "737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB68"
    },
    "741": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        761,
        785
      ],
      "op": "JUMP",
      "path": "4"
    },
    "742": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "743": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4150,
        4151
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x0"
    },
    "745": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4140,
        4147
      ],
      "op": "DUP3",
      "path": "4"
    },
    "746": {
      "branch": 32,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4140,
        4151
      ],
      "op": "GT",
      "path": "4"
    },
    "747": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33B"
    },
    "750": {
      "branch": 32,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "751": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "753": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "DUP2",
      "path": "4"
    },
    "762": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "765": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "767": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "DUP3",
      "path": "4"
    },
    "768": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "ADD",
      "path": "4"
    },
    "769": {
      "op": "MSTORE"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "774": {
      "op": "DUP3"
    },
    "775": {
      "op": "ADD"
    },
    "776": {
      "op": "MSTORE"
    },
    "777": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468656E2030000000"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "812": {
      "op": "DUP3"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "817": {
      "op": "ADD"
    },
    "818": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "819": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "821": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "822": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "DUP1",
      "path": "4"
    },
    "823": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "824": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "SUB",
      "path": "4"
    },
    "825": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "826": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "827": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4132,
        4185
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "828": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4246,
        4268
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 2,
      "value": "0x344"
    },
    "831": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4261,
        4267
      ],
      "op": "DUP2",
      "path": "4"
    },
    "832": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4246,
        4260
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x966"
    },
    "835": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        4246,
        4268
      ],
      "op": "JUMP",
      "path": "4"
    },
    "836": {
      "branch": 33,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4246,
        4268
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "837": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x390"
    },
    "840": {
      "branch": 33,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "841": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "843": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "DUP2",
      "path": "4"
    },
    "852": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "855": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "857": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "DUP3",
      "path": "4"
    },
    "858": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "ADD",
      "path": "4"
    },
    "859": {
      "op": "DUP2"
    },
    "860": {
      "op": "SWAP1"
    },
    "861": {
      "op": "MSTORE"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "864": {
      "op": "DUP3"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH32",
      "value": "0x546F6B656E2069732063757272656E746C79206E6F7420616C6C6F7765642121"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "902": {
      "op": "DUP3"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "op": "MSTORE"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x332"
    },
    "911": {
      "op": "JUMP"
    },
    "912": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4238,
        4305
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "913": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x40"
    },
    "915": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "916": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "921": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "923": {
      "op": "SHL"
    },
    "924": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP2",
      "path": "4"
    },
    "925": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "926": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4534,
        4544
      ],
      "op": "CALLER",
      "path": "4"
    },
    "927": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "929": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP3",
      "path": "4"
    },
    "930": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "ADD",
      "path": "4"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4554,
        4558
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "935": {
      "op": "DUP3"
    },
    "936": {
      "op": "ADD"
    },
    "937": {
      "op": "MSTORE"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "940": {
      "op": "DUP2"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "op": "DUP4"
    },
    "943": {
      "op": "SWAP1"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "951": {
      "op": "SHL"
    },
    "952": {
      "op": "SUB"
    },
    "953": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4533
      ],
      "op": "DUP3",
      "path": "4"
    },
    "954": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4533
      ],
      "op": "AND",
      "path": "4"
    },
    "955": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "956": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4533
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "961": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "967": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "969": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "970": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP1",
      "path": "4"
    },
    "971": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP4",
      "path": "4"
    },
    "972": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "SUB",
      "path": "4"
    },
    "973": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP2",
      "path": "4"
    },
    "974": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "976": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP8",
      "path": "4"
    },
    "977": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "GAS",
      "path": "4"
    },
    "978": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "CALL",
      "path": "4"
    },
    "979": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "980": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP1",
      "path": "4"
    },
    "981": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "982": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E3"
    },
    "985": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "986": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "987": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "989": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP1",
      "path": "4"
    },
    "990": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "991": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "992": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "994": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "REVERT",
      "path": "4"
    },
    "995": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "996": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "POP",
      "path": "4"
    },
    "997": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "POP",
      "path": "4"
    },
    "998": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "POP",
      "path": "4"
    },
    "999": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "POP",
      "path": "4"
    },
    "1000": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1002": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1003": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1004": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1006": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "NOT",
      "path": "4"
    },
    "1007": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1009": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1010": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "ADD",
      "path": "4"
    },
    "1011": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "AND",
      "path": "4"
    },
    "1012": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1013": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "ADD",
      "path": "4"
    },
    "1014": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1015": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1017": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1018": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "POP",
      "path": "4"
    },
    "1019": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1020": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "ADD",
      "path": "4"
    },
    "1021": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1022": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x407"
    },
    "1025": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1026": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1027": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE0"
    },
    "1030": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        4506,
        4569
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1031": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1032": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4506,
        4569
      ],
      "op": "POP",
      "path": "4"
    },
    "1033": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4579,
        4623
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x412"
    },
    "1036": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4604,
        4614
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1037": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4616,
        4622
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1038": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4579,
        4603
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB78"
    },
    "1041": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        4579,
        4623
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1042": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4579,
        4623
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1049": {
      "op": "SHL"
    },
    "1050": {
      "op": "SUB"
    },
    "1051": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 5
    },
    "1052": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "AND",
      "path": "4"
    },
    "1053": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1055": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1056": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1057": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1058": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1060": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1062": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1063": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1064": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1065": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1067": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1068": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1069": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4704
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1070": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4705,
        4715
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1071": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4716
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1072": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4716
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1073": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4716
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1074": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4716
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1075": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4716
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1076": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4716
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1077": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4716
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1078": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4716
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1079": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4738
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x441"
    },
    "1082": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4738
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1083": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4731,
        4738
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1084": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4731,
        4738
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1085": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4738
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD18"
    },
    "1088": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        4682,
        4738
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1089": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4682,
        4738
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "op": "SUB"
    },
    "1098": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1099": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "AND",
      "path": "4"
    },
    "1100": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1102": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1103": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1104": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1105": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1107": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1109": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1110": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1111": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1112": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1114": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1115": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1116": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4655
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1117": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4656,
        4666
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1118": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4667
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1119": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4667
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1120": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4667
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1121": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4667
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1122": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4667
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1123": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4667
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1124": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4667
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1125": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4738
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1126": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4738
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1127": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4738
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1128": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4633,
        4738
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1129": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4793,
        4811
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1131": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4793,
        4823
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1132": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4793,
        4823
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1133": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4793,
        4823
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1134": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4793,
        4823
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1135": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4793,
        4823
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1136": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4793,
        4823
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1137": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4793,
        4828
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1138": {
      "branch": 34,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4793,
        4828
      ],
      "op": "SUB",
      "path": "4"
    },
    "1139": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4789,
        4879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B9"
    },
    "1142": {
      "branch": 34,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4789,
        4879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1143": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4851
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x3"
    },
    "1145": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1146": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1147": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1149": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1150": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "ADD",
      "path": "4"
    },
    "1151": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1152": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1155": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1156": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1157": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1158": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1159": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1192": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "ADD",
      "path": "4"
    },
    "1193": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1194": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1201": {
      "op": "SHL"
    },
    "1202": {
      "op": "SUB"
    },
    "1203": {
      "op": "NOT"
    },
    "1204": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "AND",
      "path": "4"
    },
    "1205": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4857,
        4867
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1206": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "OR",
      "path": "4"
    },
    "1207": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1208": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4844,
        4868
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1209": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4789,
        4879
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1210": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "POP",
      "path": "4"
    },
    "1211": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3992,
        4885
      ],
      "op": "POP",
      "path": "4"
    },
    "1212": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "o",
      "offset": [
        3992,
        4885
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1213": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5763,
        5865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1214": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1216": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "op": "SUB"
    },
    "1225": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1226": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 7
    },
    "1227": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1228": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E7"
    },
    "1231": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1232": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1234": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1243": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1244": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1246": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1247": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "1250": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1251": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD30"
    },
    "1254": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1255": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1256": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5845
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x4"
    },
    "1258": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1259": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1260": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1262": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1263": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "ADD",
      "path": "4"
    },
    "1264": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1265": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1268": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1269": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1270": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1271": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1272": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1305": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "ADD",
      "path": "4"
    },
    "1306": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1307": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1314": {
      "op": "SHL"
    },
    "1315": {
      "op": "SUB"
    },
    "1316": {
      "op": "NOT"
    },
    "1317": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "AND",
      "path": "4"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1324": {
      "op": "SHL"
    },
    "1325": {
      "op": "SUB"
    },
    "1326": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1327": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1328": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1329": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "AND",
      "path": "4"
    },
    "1330": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1331": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1332": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1333": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "OR",
      "path": "4"
    },
    "1334": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1335": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5832,
        5858
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1336": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "o",
      "offset": [
        5763,
        5865
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1337": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "op": "SUB"
    },
    "1346": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1347": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "AND",
      "path": "4"
    },
    "1348": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2866,
        2873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1350": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1351": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1352": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1353": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1355": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1357": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1358": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1360": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1361": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1362": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2995,
        3020
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1363": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2991,
        3060
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x55E"
    },
    "1366": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2991,
        3060
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3048,
        3049
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x0"
    },
    "1370": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3041,
        3049
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5BA"
    },
    "1373": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3041,
        3049
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1374": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2991,
        3060
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1375": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3159,
        3172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1377": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3174,
        3190
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1378": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3194,
        3215
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x56A"
    },
    "1381": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3208,
        3214
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1382": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3194,
        3207
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9CF"
    },
    "1385": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        3194,
        3215
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1386": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3194,
        3215
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1387": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3158,
        3215
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1388": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3158,
        3215
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1389": {
      "op": "POP"
    },
    "1390": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3158,
        3215
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1391": {
      "op": "POP"
    },
    "1392": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3276,
        3288
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0x57A"
    },
    "1395": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3158,
        3215
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1396": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3276,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "1398": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3276,
        3288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE49"
    },
    "1401": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        3276,
        3288
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1402": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3276,
        3288
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1409": {
      "op": "SHL"
    },
    "1410": {
      "op": "SUB"
    },
    "1411": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1412": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1413": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "AND",
      "path": "4"
    },
    "1414": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1416": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1417": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1418": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1419": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3249
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1421": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1423": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1424": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1425": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1426": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1428": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1429": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1430": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3257
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1431": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3264
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1432": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3264
      ],
      "op": "DUP11",
      "path": "4"
    },
    "1433": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3264
      ],
      "op": "AND",
      "path": "4"
    },
    "1434": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3264
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1435": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3264
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1436": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3264
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1437": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3264
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1438": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3264
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1439": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3264
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1440": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3264
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1441": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3272
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5AB"
    },
    "1444": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1445": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3267,
        3272
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1446": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3267,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1447": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3272
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE55"
    },
    "1450": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        3235,
        3272
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1451": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3235,
        3272
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1452": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3234,
        3288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5B5"
    },
    "1455": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3234,
        3288
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1456": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3234,
        3288
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1457": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3234,
        3288
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE74"
    },
    "1460": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        3234,
        3288
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1461": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3234,
        3288
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1462": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3225,
        3290
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1463": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3225,
        3290
      ],
      "op": "POP",
      "path": "4"
    },
    "1464": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3225,
        3290
      ],
      "op": "POP",
      "path": "4"
    },
    "1465": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3225,
        3290
      ],
      "op": "POP",
      "path": "4"
    },
    "1466": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1467": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1468": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1469": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "POP",
      "path": "4"
    },
    "1470": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        2757,
        3297
      ],
      "op": "POP",
      "path": "4"
    },
    "1471": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "o",
      "offset": [
        2757,
        3297
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1472": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4915,
        5439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1479": {
      "op": "SHL"
    },
    "1480": {
      "op": "SUB"
    },
    "1481": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1482": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "AND",
      "path": "4"
    },
    "1483": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4971,
        4986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1485": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1486": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1487": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1488": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5003
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1490": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1492": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1493": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1494": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1495": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1497": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1498": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1499": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5011
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1500": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5012,
        5022
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1501": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5023
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1502": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5023
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1503": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5023
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1504": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5023
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1505": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5023
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1506": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5023
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1507": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5023
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1508": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4989,
        5023
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1509": {
      "branch": 35,
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5041,
        5052
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 11
    },
    "1510": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x631"
    },
    "1513": {
      "branch": 35,
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1514": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1516": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1517": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1523": {
      "op": "SHL"
    },
    "1524": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1525": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1528": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1530": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1531": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "ADD",
      "path": "4"
    },
    "1532": {
      "op": "MSTORE"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1537": {
      "op": "DUP3"
    },
    "1538": {
      "op": "ADD"
    },
    "1539": {
      "op": "MSTORE"
    },
    "1540": {
      "op": "PUSH32",
      "value": "0x5374616B696E672062616C616E63652063616E6E6E6F74206265207A65726F00"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1575": {
      "op": "DUP3"
    },
    "1576": {
      "op": "ADD"
    },
    "1577": {
      "op": "MSTORE"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1580": {
      "op": "ADD"
    },
    "1581": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x332"
    },
    "1584": {
      "op": "JUMP"
    },
    "1585": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5033,
        5088
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1586": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 12,
      "value": "0x40"
    },
    "1588": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1589": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1598": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1599": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5122,
        5132
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1600": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1602": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1603": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "ADD",
      "path": "4"
    },
    "1604": {
      "op": "MSTORE"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1607": {
      "op": "DUP2"
    },
    "1608": {
      "op": "ADD"
    },
    "1609": {
      "op": "DUP3"
    },
    "1610": {
      "op": "SWAP1"
    },
    "1611": {
      "op": "MSTORE"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1618": {
      "op": "SHL"
    },
    "1619": {
      "op": "SUB"
    },
    "1620": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1621": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "AND",
      "path": "4"
    },
    "1622": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1623": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1628": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1631": {
      "op": "ADD"
    },
    "1632": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1634": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1636": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1637": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1638": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1639": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "SUB",
      "path": "4"
    },
    "1640": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1641": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1643": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1644": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "GAS",
      "path": "4"
    },
    "1645": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "CALL",
      "path": "4"
    },
    "1646": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1647": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1648": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1649": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x67E"
    },
    "1652": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1653": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1654": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1656": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1657": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1658": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1659": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1661": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1662": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1663": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "POP",
      "path": "4"
    },
    "1664": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "POP",
      "path": "4"
    },
    "1665": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "POP",
      "path": "4"
    },
    "1666": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "POP",
      "path": "4"
    },
    "1667": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1669": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1670": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1671": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1673": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "NOT",
      "path": "4"
    },
    "1674": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1676": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1677": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "ADD",
      "path": "4"
    },
    "1678": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "AND",
      "path": "4"
    },
    "1679": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1680": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "ADD",
      "path": "4"
    },
    "1681": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1682": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1684": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1685": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "POP",
      "path": "4"
    },
    "1686": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1687": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "ADD",
      "path": "4"
    },
    "1688": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1689": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A2"
    },
    "1692": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1693": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1694": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE0"
    },
    "1697": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        5098,
        5142
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1698": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5098,
        5142
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1706": {
      "op": "SHL"
    },
    "1707": {
      "op": "SUB"
    },
    "1708": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 13
    },
    "1709": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "AND",
      "path": "4"
    },
    "1710": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5189,
        5190
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1712": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1713": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1714": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1715": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5166
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1717": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1719": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1720": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1721": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1722": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1724": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1725": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1726": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5174
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1727": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5175,
        5185
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1728": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5186
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1729": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5186
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1730": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5186
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1731": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5186
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1732": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5186
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1733": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5186
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1734": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5186
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1735": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5190
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1736": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5190
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1737": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5190
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1738": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5296
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 14,
      "value": "0x2"
    },
    "1740": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5308
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1741": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5308
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1742": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5308
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1743": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5308
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1744": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5308
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1745": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5308
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1746": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5308
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1747": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5312
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DC"
    },
    "1750": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5312
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1751": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5152,
        5166
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1752": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5312
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE96"
    },
    "1755": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        5278,
        5312
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1756": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5278,
        5312
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1757": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5264,
        5274
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1758": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5275
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1760": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5275
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1761": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5275
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1762": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5275
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1763": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5263
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1765": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5275
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1767": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5275
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1768": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5275
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1770": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5275
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1771": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5275
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1772": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        5245,
        5312
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "op": "POP"
    },
    "1775": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "o",
      "offset": [
        4915,
        5439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1776": {
      "offset": [
        817,
        847
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1777": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1779": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1780": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1781": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1782": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1783": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "LT",
      "path": "4"
    },
    "1784": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x700"
    },
    "1787": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1788": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1790": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1791": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1792": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1793": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1795": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1796": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1797": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1798": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1800": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1801": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1802": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1803": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "ADD",
      "path": "4"
    },
    "1804": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1811": {
      "op": "SHL"
    },
    "1812": {
      "op": "SUB"
    },
    "1813": {
      "offset": [
        817,
        847
      ],
      "op": "AND",
      "path": "4"
    },
    "1814": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        817,
        847
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "offset": [
        817,
        847
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1817": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "o",
      "offset": [
        817,
        847
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1819": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1821": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "SUB"
    },
    "1830": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1831": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1832": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1833": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x744"
    },
    "1836": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1837": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1839": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1840": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1846": {
      "op": "SHL"
    },
    "1847": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1848": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1849": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1851": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1852": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "1855": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1856": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD30"
    },
    "1859": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1860": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1861": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x74E"
    },
    "1864": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1866": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE3"
    },
    "1869": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1870": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1871": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1872": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1117,
        1279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1873": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1875": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1885": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1886": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1887": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77A"
    },
    "1890": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1891": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1893": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1894": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1900": {
      "op": "SHL"
    },
    "1901": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1902": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1903": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1905": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1906": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "1909": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1910": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD30"
    },
    "1913": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1914": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1921": {
      "op": "SHL"
    },
    "1922": {
      "op": "SUB"
    },
    "1923": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 16
    },
    "1924": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1925": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "AND",
      "path": "4"
    },
    "1926": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1928": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1929": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1930": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1931": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1251
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1933": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1935": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1936": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1938": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1939": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1259
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1940": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1272
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1941": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1272
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1948": {
      "op": "SHL"
    },
    "1949": {
      "op": "SUB"
    },
    "1950": {
      "op": "NOT"
    },
    "1951": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1272
      ],
      "op": "AND",
      "path": "4"
    },
    "1952": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1272
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1953": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1954": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1272
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1955": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1272
      ],
      "op": "AND",
      "path": "4"
    },
    "1956": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1272
      ],
      "op": "OR",
      "path": "4"
    },
    "1957": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1958": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1230,
        1272
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1959": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "o",
      "offset": [
        1117,
        1279
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1960": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1307,
        2070
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1961": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1963": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1973": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1974": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1975": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D2"
    },
    "1978": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1979": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1981": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1988": {
      "op": "SHL"
    },
    "1989": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1990": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1991": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1993": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1994": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "1997": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1998": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD30"
    },
    "2001": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2002": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2003": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1417,
        1437
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2005": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1399,
        2064
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2006": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1470,
        1477
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2008": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1470,
        1484
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2009": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1455,
        1484
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2010": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1455,
        1484
      ],
      "op": "LT",
      "path": "4"
    },
    "2011": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1399,
        2064
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2012": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1399,
        2064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A2"
    },
    "2015": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1399,
        2064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2016": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1582,
        1599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2018": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1609
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2020": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1610,
        1622
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2021": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2022": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2023": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2024": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "LT",
      "path": "4"
    },
    "2025": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7F4"
    },
    "2028": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2029": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7F4"
    },
    "2032": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEAD"
    },
    "2035": {
      "fn": "TokenFarm.issueToken",
      "jump": "i",
      "offset": [
        1602,
        1623
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2036": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2037": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2039": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2040": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2041": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2042": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2044": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2045": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2046": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "ADD",
      "path": "4"
    },
    "2047": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "op": "SUB"
    },
    "2056": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "AND",
      "path": "4"
    },
    "2057": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2058": {
      "op": "POP"
    },
    "2059": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1662,
        1690
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x813"
    },
    "2062": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1602,
        1623
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2063": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1662,
        1679
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A5"
    },
    "2066": {
      "fn": "TokenFarm.issueToken",
      "jump": "i",
      "offset": [
        1662,
        1690
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2067": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1662,
        1690
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2068": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 17,
      "value": "0x6"
    },
    "2070": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1713
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2071": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2073": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2074": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2083": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2090": {
      "op": "SHL"
    },
    "2091": {
      "op": "SUB"
    },
    "2092": {
      "op": "DUP6"
    },
    "2093": {
      "op": "DUP2"
    },
    "2094": {
      "op": "AND"
    },
    "2095": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2097": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2098": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "ADD",
      "path": "4"
    },
    "2099": {
      "op": "MSTORE"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2102": {
      "op": "DUP3"
    },
    "2103": {
      "op": "ADD"
    },
    "2104": {
      "op": "DUP5"
    },
    "2105": {
      "op": "SWAP1"
    },
    "2106": {
      "op": "MSTORE"
    },
    "2107": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1637,
        1690
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2108": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1637,
        1690
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2109": {
      "op": "POP"
    },
    "2110": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1713
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2111": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1713
      ],
      "op": "AND",
      "path": "4"
    },
    "2112": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1713
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2113": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1722
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "2118": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1722
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2121": {
      "op": "ADD"
    },
    "2122": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2124": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2126": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2127": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2128": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2129": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "SUB",
      "path": "4"
    },
    "2130": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2131": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2133": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2134": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "GAS",
      "path": "4"
    },
    "2135": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "CALL",
      "path": "4"
    },
    "2136": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2137": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2138": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2139": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x868"
    },
    "2142": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2143": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2144": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2146": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2147": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2148": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2149": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2151": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2152": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2153": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "POP",
      "path": "4"
    },
    "2154": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "POP",
      "path": "4"
    },
    "2155": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "POP",
      "path": "4"
    },
    "2156": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "POP",
      "path": "4"
    },
    "2157": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2159": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2160": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2161": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2163": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "NOT",
      "path": "4"
    },
    "2164": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2166": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2167": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "ADD",
      "path": "4"
    },
    "2168": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "AND",
      "path": "4"
    },
    "2169": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2170": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "ADD",
      "path": "4"
    },
    "2171": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2172": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2174": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2175": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "POP",
      "path": "4"
    },
    "2176": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2177": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "ADD",
      "path": "4"
    },
    "2178": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2179": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x88C"
    },
    "2182": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2183": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2184": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE0"
    },
    "2187": {
      "fn": "TokenFarm.issueToken",
      "jump": "i",
      "offset": [
        1704,
        1749
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2188": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2189": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1704,
        1749
      ],
      "op": "POP",
      "path": "4"
    },
    "2190": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1523,
        2064
      ],
      "op": "POP",
      "path": "4"
    },
    "2191": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1523,
        2064
      ],
      "op": "POP",
      "path": "4"
    },
    "2192": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1498,
        1512
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 18
    },
    "2193": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1498,
        1512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2194": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1498,
        1512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x89A"
    },
    "2197": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1498,
        1512
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2198": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1498,
        1512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC3"
    },
    "2201": {
      "fn": "TokenFarm.issueToken",
      "jump": "i",
      "offset": [
        1498,
        1512
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2202": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1498,
        1512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2203": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1498,
        1512
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2204": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1498,
        1512
      ],
      "op": "POP",
      "path": "4"
    },
    "2205": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1498,
        1512
      ],
      "op": "POP",
      "path": "4"
    },
    "2206": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1399,
        2064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D5"
    },
    "2209": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1399,
        2064
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2210": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1399,
        2064
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2211": {
      "fn": "TokenFarm.issueToken",
      "offset": [
        1399,
        2064
      ],
      "op": "POP",
      "path": "4"
    },
    "2212": {
      "fn": "TokenFarm.issueToken",
      "jump": "o",
      "offset": [
        1307,
        2070
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2213": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2094,
        2663
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "op": "SUB"
    },
    "2222": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 19
    },
    "2223": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "AND",
      "path": "4"
    },
    "2224": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2157,
        2164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2226": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2227": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2228": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2229": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2234
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2231": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2233": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2234": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2236": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2237": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2238": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2216,
        2241
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2239": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2157,
        2164
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2240": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2157,
        2164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2241": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x903"
    },
    "2244": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2245": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2247": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2254": {
      "op": "SHL"
    },
    "2255": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2256": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2259": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2261": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2262": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "ADD",
      "path": "4"
    },
    "2263": {
      "op": "MSTORE"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2268": {
      "op": "DUP3"
    },
    "2269": {
      "op": "ADD"
    },
    "2270": {
      "op": "MSTORE"
    },
    "2271": {
      "op": "PUSH20",
      "value": "0x4E4F20746F6B656E73207374616B656420212121"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2297": {
      "op": "DUP3"
    },
    "2298": {
      "op": "ADD"
    },
    "2299": {
      "op": "MSTORE"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2302": {
      "op": "ADD"
    },
    "2303": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x332"
    },
    "2306": {
      "op": "JUMP"
    },
    "2307": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2208,
        2270
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2308": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2298,
        2323
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2310": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2280,
        2630
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2311": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2361,
        2374
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2313": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2361,
        2381
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2314": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2341,
        2381
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2315": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2341,
        2381
      ],
      "op": "LT",
      "path": "4"
    },
    "2316": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2280,
        2630
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2317": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2280,
        2630
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x95F"
    },
    "2320": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2280,
        2630
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2321": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2497,
        2619
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 20,
      "value": "0x941"
    },
    "2324": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2325": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2582
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2327": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2583,
        2600
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2328": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2329": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2330": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2331": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "LT",
      "path": "4"
    },
    "2332": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x927"
    },
    "2335": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2336": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x927"
    },
    "2339": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEAD"
    },
    "2342": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        2569,
        2601
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2343": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2344": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2346": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2347": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2348": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2349": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2351": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2352": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2353": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2354": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "ADD",
      "path": "4"
    },
    "2355": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2362": {
      "op": "SHL"
    },
    "2363": {
      "op": "SUB"
    },
    "2364": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2569,
        2601
      ],
      "op": "AND",
      "path": "4"
    },
    "2365": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2497,
        2520
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x539"
    },
    "2368": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        2497,
        2619
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2369": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2497,
        2619
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2370": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2468,
        2619
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x94B"
    },
    "2373": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2468,
        2619
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2374": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2468,
        2478
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2375": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2468,
        2619
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD18"
    },
    "2378": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        2468,
        2619
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2379": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2468,
        2619
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2380": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2439,
        2619
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2381": {
      "op": "POP"
    },
    "2382": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2395,
        2414
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 21
    },
    "2383": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2395,
        2414
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x957"
    },
    "2386": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2395,
        2414
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2387": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2395,
        2414
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC3"
    },
    "2390": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        2395,
        2414
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2391": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2395,
        2414
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2392": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2395,
        2414
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2393": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2395,
        2414
      ],
      "op": "POP",
      "path": "4"
    },
    "2394": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2395,
        2414
      ],
      "op": "POP",
      "path": "4"
    },
    "2395": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2280,
        2630
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x906"
    },
    "2398": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2280,
        2630
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2399": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2280,
        2630
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2400": {
      "op": "POP"
    },
    "2401": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2646,
        2656
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 22
    },
    "2402": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2094,
        2663
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "op": "POP"
    },
    "2405": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "o",
      "offset": [
        2094,
        2663
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2406": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2407": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5927,
        5931
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2409": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5927,
        5931
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2410": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5995,
        6260
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2411": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6078,
        6091
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2413": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6078,
        6098
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2414": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6057,
        6098
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2415": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6057,
        6098
      ],
      "op": "LT",
      "path": "4"
    },
    "2416": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5995,
        6260
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2417": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5995,
        6260
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9C6"
    },
    "2420": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5995,
        6260
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2421": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6198,
        6204
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2428": {
      "op": "SHL"
    },
    "2429": {
      "op": "SUB"
    },
    "2430": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6204
      ],
      "op": "AND",
      "path": "4"
    },
    "2431": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6174
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2433": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6175,
        6193
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2434": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2435": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2436": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2437": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "LT",
      "path": "4"
    },
    "2438": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x991"
    },
    "2441": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2442": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x991"
    },
    "2445": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEAD"
    },
    "2448": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        6161,
        6194
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2449": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2450": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2452": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2453": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2454": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2455": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2457": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2458": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2459": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2460": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "ADD",
      "path": "4"
    },
    "2461": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2468": {
      "op": "SHL"
    },
    "2469": {
      "op": "SUB"
    },
    "2470": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6194
      ],
      "op": "AND",
      "path": "4"
    },
    "2471": {
      "branch": 36,
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6161,
        6204
      ],
      "op": "SUB",
      "path": "4"
    },
    "2472": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6157,
        6250
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B4"
    },
    "2475": {
      "branch": 36,
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6157,
        6250
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2476": {
      "op": "POP"
    },
    "2477": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6231,
        6235
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0x1"
    },
    "2479": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6231,
        6235
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2480": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2481": {
      "op": "POP"
    },
    "2482": {
      "op": "POP"
    },
    "2483": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "o",
      "offset": [
        5871,
        6288
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2484": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6157,
        6250
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2485": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6112,
        6132
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 24
    },
    "2486": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6112,
        6132
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9BE"
    },
    "2489": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6112,
        6132
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2490": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6112,
        6132
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC3"
    },
    "2493": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        6112,
        6132
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2494": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6112,
        6132
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2495": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6112,
        6132
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2496": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6112,
        6132
      ],
      "op": "POP",
      "path": "4"
    },
    "2497": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6112,
        6132
      ],
      "op": "POP",
      "path": "4"
    },
    "2498": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5995,
        6260
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x96A"
    },
    "2501": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5995,
        6260
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2502": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5995,
        6260
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2503": {
      "op": "POP"
    },
    "2504": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6276,
        6281
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 25,
      "value": "0x0"
    },
    "2506": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6276,
        6281
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2507": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5871,
        6288
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "op": "POP"
    },
    "2510": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "o",
      "offset": [
        5871,
        6288
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2511": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3325,
        3945
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "op": "SUB"
    },
    "2520": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2521": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2522": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "AND",
      "path": "4"
    },
    "2523": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3409,
        3416
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2525": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2526": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2527": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2528": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3574
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2530": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2532": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2533": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2535": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2536": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2537": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2538": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2539": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2540": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2541": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2550": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2551": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2552": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2553": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3409,
        3416
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2554": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3409,
        3416
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2555": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3409,
        3416
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2556": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3409,
        3416
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2557": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2558": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "AND",
      "path": "4"
    },
    "2559": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2560": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2561": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2562": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3409,
        3416
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2563": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3409,
        3416
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2564": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2565": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2566": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3800
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "2571": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3800
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2572": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2574": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2575": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2576": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "ADD",
      "path": "4"
    },
    "2577": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2578": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "2580": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2581": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2582": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2583": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2584": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2585": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2586": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SUB",
      "path": "4"
    },
    "2587": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "ADD",
      "path": "4"
    },
    "2588": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2589": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3553,
        3582
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2590": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "GAS",
      "path": "4"
    },
    "2591": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2592": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2593": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2594": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2595": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA30"
    },
    "2598": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2599": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2600": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2602": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2603": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2604": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2605": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2607": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2608": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2609": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "POP",
      "path": "4"
    },
    "2610": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "POP",
      "path": "4"
    },
    "2611": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "POP",
      "path": "4"
    },
    "2612": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "POP",
      "path": "4"
    },
    "2613": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2615": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2616": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2617": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2619": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "NOT",
      "path": "4"
    },
    "2620": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2622": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2623": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "ADD",
      "path": "4"
    },
    "2624": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "AND",
      "path": "4"
    },
    "2625": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2626": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "ADD",
      "path": "4"
    },
    "2627": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2628": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2630": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2631": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "POP",
      "path": "4"
    },
    "2632": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2633": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "ADD",
      "path": "4"
    },
    "2634": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2635": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA54"
    },
    "2638": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2639": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2640": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEF6"
    },
    "2643": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        3775,
        3802
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2644": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3775,
        3802
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2645": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3750,
        3802
      ],
      "op": "POP",
      "path": "4"
    },
    "2646": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3750,
        3802
      ],
      "op": "POP",
      "path": "4"
    },
    "2647": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3750,
        3802
      ],
      "op": "POP",
      "path": "4"
    },
    "2648": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3750,
        3802
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2649": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3750,
        3802
      ],
      "op": "POP",
      "path": "4"
    },
    "2650": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3750,
        3802
      ],
      "op": "POP",
      "path": "4"
    },
    "2651": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3847,
        3863
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2653": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3883
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2660": {
      "op": "SHL"
    },
    "2661": {
      "op": "SUB"
    },
    "2662": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3892
      ],
      "op": "AND",
      "path": "4"
    },
    "2663": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3892
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "2668": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2670": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2671": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2672": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2677": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "AND",
      "path": "4"
    },
    "2678": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "2680": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "SHL",
      "path": "4"
    },
    "2681": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2682": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2683": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2685": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "ADD",
      "path": "4"
    },
    "2686": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2688": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2690": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2691": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2692": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2693": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "SUB",
      "path": "4"
    },
    "2694": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2695": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2696": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "GAS",
      "path": "4"
    },
    "2697": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2698": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2699": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2700": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2701": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9A"
    },
    "2704": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2705": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2706": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2708": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2709": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2710": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2711": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2713": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2714": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2715": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "POP",
      "path": "4"
    },
    "2716": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "POP",
      "path": "4"
    },
    "2717": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "POP",
      "path": "4"
    },
    "2718": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "POP",
      "path": "4"
    },
    "2719": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2721": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2722": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2723": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2725": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "NOT",
      "path": "4"
    },
    "2726": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2728": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2729": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "ADD",
      "path": "4"
    },
    "2730": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "AND",
      "path": "4"
    },
    "2731": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2732": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "ADD",
      "path": "4"
    },
    "2733": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2734": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2736": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2737": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "POP",
      "path": "4"
    },
    "2738": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2739": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "ADD",
      "path": "4"
    },
    "2740": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2741": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xABE"
    },
    "2744": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2745": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2746": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF46"
    },
    "2749": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        3874,
        3894
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2750": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3874,
        3894
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2751": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3921,
        3926
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 26
    },
    "2752": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3921,
        3926
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "2753": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3866,
        3895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2755": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3866,
        3895
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2756": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3866,
        3895
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2757": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3866,
        3895
      ],
      "op": "AND",
      "path": "4"
    },
    "2758": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3866,
        3895
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3921,
        3926
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2761": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3921,
        3926
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2762": {
      "op": "POP"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "op": "POP"
    },
    "2765": {
      "op": "POP"
    },
    "2766": {
      "op": "POP"
    },
    "2767": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "o",
      "offset": [
        3325,
        3945
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2769": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2771": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2778": {
      "op": "SHL"
    },
    "2779": {
      "op": "SUB"
    },
    "2780": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2781": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2782": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2783": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFA"
    },
    "2786": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2787": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2789": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2796": {
      "op": "SHL"
    },
    "2797": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2798": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2799": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2801": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2802": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "2805": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2806": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD30"
    },
    "2809": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2810": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2817": {
      "op": "SHL"
    },
    "2818": {
      "op": "SUB"
    },
    "2819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 27
    },
    "2820": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "2821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5F"
    },
    "2824": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2834": {
      "op": "SHL"
    },
    "2835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "2843": {
      "op": "MSTORE"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2848": {
      "op": "DUP3"
    },
    "2849": {
      "op": "ADD"
    },
    "2850": {
      "op": "MSTORE"
    },
    "2851": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2886": {
      "op": "DUP3"
    },
    "2887": {
      "op": "ADD"
    },
    "2888": {
      "op": "MSTORE"
    },
    "2889": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2898": {
      "op": "SHL"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2901": {
      "op": "DUP3"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2906": {
      "op": "ADD"
    },
    "2907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "2910": {
      "op": "JUMP"
    },
    "2911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x8A2"
    },
    "2915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE3"
    },
    "2919": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2920": {
      "offset": [
        761,
        785
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2923": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2926": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "LT",
      "path": "4"
    },
    "2928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x700"
    },
    "2931": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2932": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2935": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        761,
        785
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2936": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5445,
        5708
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "op": "SUB"
    },
    "2945": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2946": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2947": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "AND",
      "path": "4"
    },
    "2948": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5566,
        5567
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2950": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2951": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2952": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2953": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2955": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2957": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2958": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2959": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2960": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2962": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2963": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2964": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5555
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2965": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5562
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2966": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5562
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2967": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5562
      ],
      "op": "AND",
      "path": "4"
    },
    "2968": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5562
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2969": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5562
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2970": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5562
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2971": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5562
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2972": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5562
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2973": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5562
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2974": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5533,
        5562
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2975": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5529,
        5702
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B9"
    },
    "2978": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5529,
        5702
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2985": {
      "op": "SHL"
    },
    "2986": {
      "op": "SUB"
    },
    "2987": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 29
    },
    "2988": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "AND",
      "path": "4"
    },
    "2989": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2991": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2992": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2993": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2994": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5680
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2996": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2998": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2999": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3001": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3002": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3003": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5687
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3004": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBC6"
    },
    "3007": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3008": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5690,
        5691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3010": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD18"
    },
    "3013": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "jump": "i",
      "offset": [
        5662,
        5691
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3014": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5662,
        5691
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3021": {
      "op": "SHL"
    },
    "3022": {
      "op": "SUB"
    },
    "3023": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3024": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "AND",
      "path": "4"
    },
    "3025": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3027": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3028": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3029": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3030": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5652
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3032": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3034": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3035": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3037": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3038": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5659
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3039": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5634,
        5691
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3040": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5445,
        5708
      ],
      "op": "POP",
      "path": "4"
    },
    "3041": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        5445,
        5708
      ],
      "op": "POP",
      "path": "4"
    },
    "3042": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "jump": "o",
      "offset": [
        5445,
        5708
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3043": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3044": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3046": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3047": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "op": "SUB"
    },
    "3056": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 30
    },
    "3057": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3058": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "op": "SUB"
    },
    "3067": {
      "op": "NOT"
    },
    "3068": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3069": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3070": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3071": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "3072": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3073": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3074": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x40"
    },
    "3076": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3077": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3078": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3079": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3080": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "3081": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3082": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3083": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3084": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3117": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3118": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3119": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3120": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3121": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3122": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3123": {
      "op": "JUMPDEST"
    },
    "3124": {
      "op": "DUP1"
    },
    "3125": {
      "op": "CALLDATALOAD"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3132": {
      "op": "SHL"
    },
    "3133": {
      "op": "SUB"
    },
    "3134": {
      "op": "DUP2"
    },
    "3135": {
      "op": "AND"
    },
    "3136": {
      "op": "DUP2"
    },
    "3137": {
      "op": "EQ"
    },
    "3138": {
      "op": "PUSH2",
      "value": "0xC4A"
    },
    "3141": {
      "op": "JUMPI"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3144": {
      "op": "DUP1"
    },
    "3145": {
      "op": "REVERT"
    },
    "3146": {
      "op": "JUMPDEST"
    },
    "3147": {
      "op": "SWAP2"
    },
    "3148": {
      "op": "SWAP1"
    },
    "3149": {
      "op": "POP"
    },
    "3150": {
      "jump": "o",
      "op": "JUMP"
    },
    "3151": {
      "op": "JUMPDEST"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3154": {
      "op": "DUP1"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3157": {
      "op": "DUP4"
    },
    "3158": {
      "op": "DUP6"
    },
    "3159": {
      "op": "SUB"
    },
    "3160": {
      "op": "SLT"
    },
    "3161": {
      "op": "ISZERO"
    },
    "3162": {
      "op": "PUSH2",
      "value": "0xC62"
    },
    "3165": {
      "op": "JUMPI"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3168": {
      "op": "DUP1"
    },
    "3169": {
      "op": "REVERT"
    },
    "3170": {
      "op": "JUMPDEST"
    },
    "3171": {
      "op": "DUP3"
    },
    "3172": {
      "op": "CALLDATALOAD"
    },
    "3173": {
      "op": "SWAP2"
    },
    "3174": {
      "op": "POP"
    },
    "3175": {
      "op": "PUSH2",
      "value": "0xC72"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3180": {
      "op": "DUP5"
    },
    "3181": {
      "op": "ADD"
    },
    "3182": {
      "op": "PUSH2",
      "value": "0xC33"
    },
    "3185": {
      "jump": "i",
      "op": "JUMP"
    },
    "3186": {
      "op": "JUMPDEST"
    },
    "3187": {
      "op": "SWAP1"
    },
    "3188": {
      "op": "POP"
    },
    "3189": {
      "op": "SWAP3"
    },
    "3190": {
      "op": "POP"
    },
    "3191": {
      "op": "SWAP3"
    },
    "3192": {
      "op": "SWAP1"
    },
    "3193": {
      "op": "POP"
    },
    "3194": {
      "jump": "o",
      "op": "JUMP"
    },
    "3195": {
      "op": "JUMPDEST"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3200": {
      "op": "DUP3"
    },
    "3201": {
      "op": "DUP5"
    },
    "3202": {
      "op": "SUB"
    },
    "3203": {
      "op": "SLT"
    },
    "3204": {
      "op": "ISZERO"
    },
    "3205": {
      "op": "PUSH2",
      "value": "0xC8D"
    },
    "3208": {
      "op": "JUMPI"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3211": {
      "op": "DUP1"
    },
    "3212": {
      "op": "REVERT"
    },
    "3213": {
      "op": "JUMPDEST"
    },
    "3214": {
      "op": "PUSH2",
      "value": "0xC96"
    },
    "3217": {
      "op": "DUP3"
    },
    "3218": {
      "op": "PUSH2",
      "value": "0xC33"
    },
    "3221": {
      "jump": "i",
      "op": "JUMP"
    },
    "3222": {
      "op": "JUMPDEST"
    },
    "3223": {
      "op": "SWAP4"
    },
    "3224": {
      "op": "SWAP3"
    },
    "3225": {
      "op": "POP"
    },
    "3226": {
      "op": "POP"
    },
    "3227": {
      "op": "POP"
    },
    "3228": {
      "jump": "o",
      "op": "JUMP"
    },
    "3229": {
      "op": "JUMPDEST"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3232": {
      "op": "DUP1"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3235": {
      "op": "DUP4"
    },
    "3236": {
      "op": "DUP6"
    },
    "3237": {
      "op": "SUB"
    },
    "3238": {
      "op": "SLT"
    },
    "3239": {
      "op": "ISZERO"
    },
    "3240": {
      "op": "PUSH2",
      "value": "0xCB0"
    },
    "3243": {
      "op": "JUMPI"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3246": {
      "op": "DUP1"
    },
    "3247": {
      "op": "REVERT"
    },
    "3248": {
      "op": "JUMPDEST"
    },
    "3249": {
      "op": "PUSH2",
      "value": "0xCB9"
    },
    "3252": {
      "op": "DUP4"
    },
    "3253": {
      "op": "PUSH2",
      "value": "0xC33"
    },
    "3256": {
      "jump": "i",
      "op": "JUMP"
    },
    "3257": {
      "op": "JUMPDEST"
    },
    "3258": {
      "op": "SWAP2"
    },
    "3259": {
      "op": "POP"
    },
    "3260": {
      "op": "PUSH2",
      "value": "0xC72"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3265": {
      "op": "DUP5"
    },
    "3266": {
      "op": "ADD"
    },
    "3267": {
      "op": "PUSH2",
      "value": "0xC33"
    },
    "3270": {
      "jump": "i",
      "op": "JUMP"
    },
    "3271": {
      "op": "JUMPDEST"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3276": {
      "op": "DUP3"
    },
    "3277": {
      "op": "DUP5"
    },
    "3278": {
      "op": "SUB"
    },
    "3279": {
      "op": "SLT"
    },
    "3280": {
      "op": "ISZERO"
    },
    "3281": {
      "op": "PUSH2",
      "value": "0xCD9"
    },
    "3284": {
      "op": "JUMPI"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3287": {
      "op": "DUP1"
    },
    "3288": {
      "op": "REVERT"
    },
    "3289": {
      "op": "JUMPDEST"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "op": "CALLDATALOAD"
    },
    "3292": {
      "op": "SWAP2"
    },
    "3293": {
      "op": "SWAP1"
    },
    "3294": {
      "op": "POP"
    },
    "3295": {
      "jump": "o",
      "op": "JUMP"
    },
    "3296": {
      "op": "JUMPDEST"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3301": {
      "op": "DUP3"
    },
    "3302": {
      "op": "DUP5"
    },
    "3303": {
      "op": "SUB"
    },
    "3304": {
      "op": "SLT"
    },
    "3305": {
      "op": "ISZERO"
    },
    "3306": {
      "op": "PUSH2",
      "value": "0xCF2"
    },
    "3309": {
      "op": "JUMPI"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3312": {
      "op": "DUP1"
    },
    "3313": {
      "op": "REVERT"
    },
    "3314": {
      "op": "JUMPDEST"
    },
    "3315": {
      "op": "DUP2"
    },
    "3316": {
      "op": "MLOAD"
    },
    "3317": {
      "op": "DUP1"
    },
    "3318": {
      "op": "ISZERO"
    },
    "3319": {
      "op": "ISZERO"
    },
    "3320": {
      "op": "DUP2"
    },
    "3321": {
      "op": "EQ"
    },
    "3322": {
      "op": "PUSH2",
      "value": "0xC96"
    },
    "3325": {
      "op": "JUMPI"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3328": {
      "op": "DUP1"
    },
    "3329": {
      "op": "REVERT"
    },
    "3330": {
      "op": "JUMPDEST"
    },
    "3331": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3338": {
      "op": "SHL"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3341": {
      "op": "MSTORE"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3346": {
      "op": "MSTORE"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3351": {
      "op": "REVERT"
    },
    "3352": {
      "op": "JUMPDEST"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3355": {
      "op": "DUP3"
    },
    "3356": {
      "op": "NOT"
    },
    "3357": {
      "op": "DUP3"
    },
    "3358": {
      "op": "GT"
    },
    "3359": {
      "op": "ISZERO"
    },
    "3360": {
      "op": "PUSH2",
      "value": "0xD2B"
    },
    "3363": {
      "op": "JUMPI"
    },
    "3364": {
      "op": "PUSH2",
      "value": "0xD2B"
    },
    "3367": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3370": {
      "jump": "i",
      "op": "JUMP"
    },
    "3371": {
      "op": "JUMPDEST"
    },
    "3372": {
      "op": "POP"
    },
    "3373": {
      "op": "ADD"
    },
    "3374": {
      "op": "SWAP1"
    },
    "3375": {
      "jump": "o",
      "op": "JUMP"
    },
    "3376": {
      "op": "JUMPDEST"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3379": {
      "op": "DUP1"
    },
    "3380": {
      "op": "DUP3"
    },
    "3381": {
      "op": "MSTORE"
    },
    "3382": {
      "op": "DUP2"
    },
    "3383": {
      "op": "DUP2"
    },
    "3384": {
      "op": "ADD"
    },
    "3385": {
      "op": "MSTORE"
    },
    "3386": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3421": {
      "op": "DUP3"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "op": "MSTORE"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3426": {
      "op": "ADD"
    },
    "3427": {
      "op": "SWAP1"
    },
    "3428": {
      "jump": "o",
      "op": "JUMP"
    },
    "3429": {
      "op": "JUMPDEST"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3432": {
      "op": "DUP2"
    },
    "3433": {
      "op": "DUP2"
    },
    "3434": {
      "op": "JUMPDEST"
    },
    "3435": {
      "op": "DUP1"
    },
    "3436": {
      "op": "DUP6"
    },
    "3437": {
      "op": "GT"
    },
    "3438": {
      "op": "ISZERO"
    },
    "3439": {
      "op": "PUSH2",
      "value": "0xDA0"
    },
    "3442": {
      "op": "JUMPI"
    },
    "3443": {
      "op": "DUP2"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3446": {
      "op": "NOT"
    },
    "3447": {
      "op": "DIV"
    },
    "3448": {
      "op": "DUP3"
    },
    "3449": {
      "op": "GT"
    },
    "3450": {
      "op": "ISZERO"
    },
    "3451": {
      "op": "PUSH2",
      "value": "0xD86"
    },
    "3454": {
      "op": "JUMPI"
    },
    "3455": {
      "op": "PUSH2",
      "value": "0xD86"
    },
    "3458": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3461": {
      "jump": "i",
      "op": "JUMP"
    },
    "3462": {
      "op": "JUMPDEST"
    },
    "3463": {
      "op": "DUP1"
    },
    "3464": {
      "op": "DUP6"
    },
    "3465": {
      "op": "AND"
    },
    "3466": {
      "op": "ISZERO"
    },
    "3467": {
      "op": "PUSH2",
      "value": "0xD93"
    },
    "3470": {
      "op": "JUMPI"
    },
    "3471": {
      "op": "SWAP2"
    },
    "3472": {
      "op": "DUP2"
    },
    "3473": {
      "op": "MUL"
    },
    "3474": {
      "op": "SWAP2"
    },
    "3475": {
      "op": "JUMPDEST"
    },
    "3476": {
      "op": "SWAP4"
    },
    "3477": {
      "op": "DUP5"
    },
    "3478": {
      "op": "SHR"
    },
    "3479": {
      "op": "SWAP4"
    },
    "3480": {
      "op": "SWAP1"
    },
    "3481": {
      "op": "DUP1"
    },
    "3482": {
      "op": "MUL"
    },
    "3483": {
      "op": "SWAP1"
    },
    "3484": {
      "op": "PUSH2",
      "value": "0xD6A"
    },
    "3487": {
      "op": "JUMP"
    },
    "3488": {
      "op": "JUMPDEST"
    },
    "3489": {
      "op": "POP"
    },
    "3490": {
      "op": "SWAP3"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "op": "SWAP3"
    },
    "3493": {
      "op": "SWAP1"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "jump": "o",
      "op": "JUMP"
    },
    "3496": {
      "op": "JUMPDEST"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3499": {
      "op": "DUP3"
    },
    "3500": {
      "op": "PUSH2",
      "value": "0xDB7"
    },
    "3503": {
      "op": "JUMPI"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3507": {
      "op": "PUSH2",
      "value": "0x5BA"
    },
    "3510": {
      "op": "JUMP"
    },
    "3511": {
      "op": "JUMPDEST"
    },
    "3512": {
      "op": "DUP2"
    },
    "3513": {
      "op": "PUSH2",
      "value": "0xDC4"
    },
    "3516": {
      "op": "JUMPI"
    },
    "3517": {
      "op": "POP"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3520": {
      "op": "PUSH2",
      "value": "0x5BA"
    },
    "3523": {
      "op": "JUMP"
    },
    "3524": {
      "op": "JUMPDEST"
    },
    "3525": {
      "op": "DUP2"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3528": {
      "op": "DUP2"
    },
    "3529": {
      "op": "EQ"
    },
    "3530": {
      "op": "PUSH2",
      "value": "0xDDA"
    },
    "3533": {
      "op": "JUMPI"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3536": {
      "op": "DUP2"
    },
    "3537": {
      "op": "EQ"
    },
    "3538": {
      "op": "PUSH2",
      "value": "0xDE4"
    },
    "3541": {
      "op": "JUMPI"
    },
    "3542": {
      "op": "PUSH2",
      "value": "0xE00"
    },
    "3545": {
      "op": "JUMP"
    },
    "3546": {
      "op": "JUMPDEST"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3549": {
      "op": "SWAP2"
    },
    "3550": {
      "op": "POP"
    },
    "3551": {
      "op": "POP"
    },
    "3552": {
      "op": "PUSH2",
      "value": "0x5BA"
    },
    "3555": {
      "op": "JUMP"
    },
    "3556": {
      "op": "JUMPDEST"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3559": {
      "op": "DUP5"
    },
    "3560": {
      "op": "GT"
    },
    "3561": {
      "op": "ISZERO"
    },
    "3562": {
      "op": "PUSH2",
      "value": "0xDF5"
    },
    "3565": {
      "op": "JUMPI"
    },
    "3566": {
      "op": "PUSH2",
      "value": "0xDF5"
    },
    "3569": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3572": {
      "jump": "i",
      "op": "JUMP"
    },
    "3573": {
      "op": "JUMPDEST"
    },
    "3574": {
      "op": "POP"
    },
    "3575": {
      "op": "POP"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3578": {
      "op": "DUP3"
    },
    "3579": {
      "op": "SHL"
    },
    "3580": {
      "op": "PUSH2",
      "value": "0x5BA"
    },
    "3583": {
      "op": "JUMP"
    },
    "3584": {
      "op": "JUMPDEST"
    },
    "3585": {
      "op": "POP"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3588": {
      "op": "DUP4"
    },
    "3589": {
      "op": "LT"
    },
    "3590": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "3593": {
      "op": "DUP4"
    },
    "3594": {
      "op": "LT"
    },
    "3595": {
      "op": "AND"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "3598": {
      "op": "DUP5"
    },
    "3599": {
      "op": "LT"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3602": {
      "op": "DUP5"
    },
    "3603": {
      "op": "LT"
    },
    "3604": {
      "op": "AND"
    },
    "3605": {
      "op": "OR"
    },
    "3606": {
      "op": "ISZERO"
    },
    "3607": {
      "op": "PUSH2",
      "value": "0xE23"
    },
    "3610": {
      "op": "JUMPI"
    },
    "3611": {
      "op": "POP"
    },
    "3612": {
      "op": "DUP2"
    },
    "3613": {
      "op": "DUP2"
    },
    "3614": {
      "op": "EXP"
    },
    "3615": {
      "op": "PUSH2",
      "value": "0x5BA"
    },
    "3618": {
      "op": "JUMP"
    },
    "3619": {
      "op": "JUMPDEST"
    },
    "3620": {
      "op": "PUSH2",
      "value": "0xE2D"
    },
    "3623": {
      "op": "DUP4"
    },
    "3624": {
      "op": "DUP4"
    },
    "3625": {
      "op": "PUSH2",
      "value": "0xD65"
    },
    "3628": {
      "jump": "i",
      "op": "JUMP"
    },
    "3629": {
      "op": "JUMPDEST"
    },
    "3630": {
      "op": "DUP1"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3633": {
      "op": "NOT"
    },
    "3634": {
      "op": "DIV"
    },
    "3635": {
      "op": "DUP3"
    },
    "3636": {
      "op": "GT"
    },
    "3637": {
      "op": "ISZERO"
    },
    "3638": {
      "op": "PUSH2",
      "value": "0xE41"
    },
    "3641": {
      "op": "JUMPI"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE41"
    },
    "3645": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3648": {
      "jump": "i",
      "op": "JUMP"
    },
    "3649": {
      "op": "JUMPDEST"
    },
    "3650": {
      "op": "MUL"
    },
    "3651": {
      "op": "SWAP4"
    },
    "3652": {
      "op": "SWAP3"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "jump": "o",
      "op": "JUMP"
    },
    "3657": {
      "op": "JUMPDEST"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3660": {
      "op": "PUSH2",
      "value": "0xC96"
    },
    "3663": {
      "op": "DUP4"
    },
    "3664": {
      "op": "DUP4"
    },
    "3665": {
      "op": "PUSH2",
      "value": "0xDA8"
    },
    "3668": {
      "jump": "i",
      "op": "JUMP"
    },
    "3669": {
      "op": "JUMPDEST"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3672": {
      "op": "DUP2"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3675": {
      "op": "NOT"
    },
    "3676": {
      "op": "DIV"
    },
    "3677": {
      "op": "DUP4"
    },
    "3678": {
      "op": "GT"
    },
    "3679": {
      "op": "DUP3"
    },
    "3680": {
      "op": "ISZERO"
    },
    "3681": {
      "op": "ISZERO"
    },
    "3682": {
      "op": "AND"
    },
    "3683": {
      "op": "ISZERO"
    },
    "3684": {
      "op": "PUSH2",
      "value": "0xE6F"
    },
    "3687": {
      "op": "JUMPI"
    },
    "3688": {
      "op": "PUSH2",
      "value": "0xE6F"
    },
    "3691": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3694": {
      "jump": "i",
      "op": "JUMP"
    },
    "3695": {
      "op": "JUMPDEST"
    },
    "3696": {
      "op": "POP"
    },
    "3697": {
      "op": "MUL"
    },
    "3698": {
      "op": "SWAP1"
    },
    "3699": {
      "jump": "o",
      "op": "JUMP"
    },
    "3700": {
      "op": "JUMPDEST"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3703": {
      "op": "DUP3"
    },
    "3704": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3707": {
      "op": "JUMPI"
    },
    "3708": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3715": {
      "op": "SHL"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3718": {
      "op": "MSTORE"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3723": {
      "op": "MSTORE"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3728": {
      "op": "REVERT"
    },
    "3729": {
      "op": "JUMPDEST"
    },
    "3730": {
      "op": "POP"
    },
    "3731": {
      "op": "DIV"
    },
    "3732": {
      "op": "SWAP1"
    },
    "3733": {
      "jump": "o",
      "op": "JUMP"
    },
    "3734": {
      "op": "JUMPDEST"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3737": {
      "op": "DUP3"
    },
    "3738": {
      "op": "DUP3"
    },
    "3739": {
      "op": "LT"
    },
    "3740": {
      "op": "ISZERO"
    },
    "3741": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "3744": {
      "op": "JUMPI"
    },
    "3745": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "3748": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3751": {
      "jump": "i",
      "op": "JUMP"
    },
    "3752": {
      "op": "JUMPDEST"
    },
    "3753": {
      "op": "POP"
    },
    "3754": {
      "op": "SUB"
    },
    "3755": {
      "op": "SWAP1"
    },
    "3756": {
      "jump": "o",
      "op": "JUMP"
    },
    "3757": {
      "op": "JUMPDEST"
    },
    "3758": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3768": {
      "op": "MSTORE"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3773": {
      "op": "MSTORE"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3778": {
      "op": "REVERT"
    },
    "3779": {
      "op": "JUMPDEST"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3784": {
      "op": "DUP3"
    },
    "3785": {
      "op": "ADD"
    },
    "3786": {
      "op": "PUSH2",
      "value": "0xED5"
    },
    "3789": {
      "op": "JUMPI"
    },
    "3790": {
      "op": "PUSH2",
      "value": "0xED5"
    },
    "3793": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3796": {
      "jump": "i",
      "op": "JUMP"
    },
    "3797": {
      "op": "JUMPDEST"
    },
    "3798": {
      "op": "POP"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3801": {
      "op": "ADD"
    },
    "3802": {
      "op": "SWAP1"
    },
    "3803": {
      "jump": "o",
      "op": "JUMP"
    },
    "3804": {
      "op": "JUMPDEST"
    },
    "3805": {
      "op": "DUP1"
    },
    "3806": {
      "op": "MLOAD"
    },
    "3807": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "3818": {
      "op": "DUP2"
    },
    "3819": {
      "op": "AND"
    },
    "3820": {
      "op": "DUP2"
    },
    "3821": {
      "op": "EQ"
    },
    "3822": {
      "op": "PUSH2",
      "value": "0xC4A"
    },
    "3825": {
      "op": "JUMPI"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3828": {
      "op": "DUP1"
    },
    "3829": {
      "op": "REVERT"
    },
    "3830": {
      "op": "JUMPDEST"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3833": {
      "op": "DUP1"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3836": {
      "op": "DUP1"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3841": {
      "op": "DUP7"
    },
    "3842": {
      "op": "DUP9"
    },
    "3843": {
      "op": "SUB"
    },
    "3844": {
      "op": "SLT"
    },
    "3845": {
      "op": "ISZERO"
    },
    "3846": {
      "op": "PUSH2",
      "value": "0xF0E"
    },
    "3849": {
      "op": "JUMPI"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3852": {
      "op": "DUP1"
    },
    "3853": {
      "op": "REVERT"
    },
    "3854": {
      "op": "JUMPDEST"
    },
    "3855": {
      "op": "PUSH2",
      "value": "0xF17"
    },
    "3858": {
      "op": "DUP7"
    },
    "3859": {
      "op": "PUSH2",
      "value": "0xEDC"
    },
    "3862": {
      "jump": "i",
      "op": "JUMP"
    },
    "3863": {
      "op": "JUMPDEST"
    },
    "3864": {
      "op": "SWAP5"
    },
    "3865": {
      "op": "POP"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3868": {
      "op": "DUP7"
    },
    "3869": {
      "op": "ADD"
    },
    "3870": {
      "op": "MLOAD"
    },
    "3871": {
      "op": "SWAP4"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3875": {
      "op": "DUP7"
    },
    "3876": {
      "op": "ADD"
    },
    "3877": {
      "op": "MLOAD"
    },
    "3878": {
      "op": "SWAP3"
    },
    "3879": {
      "op": "POP"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3882": {
      "op": "DUP7"
    },
    "3883": {
      "op": "ADD"
    },
    "3884": {
      "op": "MLOAD"
    },
    "3885": {
      "op": "SWAP2"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "op": "PUSH2",
      "value": "0xF3A"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3892": {
      "op": "DUP8"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "PUSH2",
      "value": "0xEDC"
    },
    "3897": {
      "jump": "i",
      "op": "JUMP"
    },
    "3898": {
      "op": "JUMPDEST"
    },
    "3899": {
      "op": "SWAP1"
    },
    "3900": {
      "op": "POP"
    },
    "3901": {
      "op": "SWAP3"
    },
    "3902": {
      "op": "SWAP6"
    },
    "3903": {
      "op": "POP"
    },
    "3904": {
      "op": "SWAP3"
    },
    "3905": {
      "op": "SWAP6"
    },
    "3906": {
      "op": "SWAP1"
    },
    "3907": {
      "op": "SWAP4"
    },
    "3908": {
      "op": "POP"
    },
    "3909": {
      "jump": "o",
      "op": "JUMP"
    },
    "3910": {
      "op": "JUMPDEST"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3915": {
      "op": "DUP3"
    },
    "3916": {
      "op": "DUP5"
    },
    "3917": {
      "op": "SUB"
    },
    "3918": {
      "op": "SLT"
    },
    "3919": {
      "op": "ISZERO"
    },
    "3920": {
      "op": "PUSH2",
      "value": "0xF58"
    },
    "3923": {
      "op": "JUMPI"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3926": {
      "op": "DUP1"
    },
    "3927": {
      "op": "REVERT"
    },
    "3928": {
      "op": "JUMPDEST"
    },
    "3929": {
      "op": "DUP2"
    },
    "3930": {
      "op": "MLOAD"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3933": {
      "op": "DUP2"
    },
    "3934": {
      "op": "AND"
    },
    "3935": {
      "op": "DUP2"
    },
    "3936": {
      "op": "EQ"
    },
    "3937": {
      "op": "PUSH2",
      "value": "0xC96"
    },
    "3940": {
      "op": "JUMPI"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3943": {
      "op": "DUP1"
    },
    "3944": {
      "op": "REVERT"
    }
  },
  "sha1": "ba4c2a5b94d3f1bb344249d495cc025b7deeec89",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n// 1. StakeTokens\n// 2. unStakeTokens >> rewards to user of the platform\n// 3. issueTokens\n// 4. addAllowedTokens\n// 5. getEthValue\n\ncontract TokenFarm is Ownable {\n    //  ---- MAPPINGS / LIST\n    //  mapping Token 1st-address  -> staker 2nd-address -> uint256-amount\n    mapping(address => mapping(address => uint256)) public stakingBalance;\n    //  Mapp token to user, so we know how many different tokens this address is staking\n    mapping(address => uint256) public uniqueTokensStaked;\n    // List stakers\n    address[] public stakers;\n    // List allowed token\n    address[] public allowedTokens;\n    //  Token Address >> Price Feed\n    mapping(address => address) public tokenPriceFeedMapping;\n\n    //  ----GLOBAL VARIABLES\n    IERC20 public dappToken;\n\n    constructor(address _dappTokenAddress) public {\n        dappToken = IERC20(_dappTokenAddress);\n    }\n\n    function setPriceFeedContract(address _token, address _priceFeed)\n        public\n        onlyOwner\n    {\n        tokenPriceFeedMapping[_token] = _priceFeed;\n    }\n\n    // 3. issueTokens\n    function issueToken() public onlyOwner {\n        //  we need list of staker - above\n        for (\n            uint256 stakersIndex = 0;\n            stakersIndex < stakers.length;\n            stakersIndex++\n        ) {\n            //  then we can issue some token\n            address recipient = stakers[stakersIndex];\n            uint256 userTotalValue = getUserTotalValue(recipient);\n            dappToken.transfer(recipient, userTotalValue);\n            //  we are going thought the recepient and send them a token rewards >> DappT\n            //  based on total vaule locked\n            //  Cose we must have DappT >> we put in cunstructur DappT address\n            //  we can send the rewards\n            //  ===== dappToken.transfer(recepien)\n        }\n    }\n\n    // Function A\n    function getUserTotalValue(address _user) public view returns (uint256) {\n        uint256 totalValue = 0;\n        require(uniqueTokensStaked[_user] > 0, \"NO tokens staked !!!\");\n        for (\n            uint256 allowedTokenIndex = 0;\n            allowedTokenIndex < allowedTokens.length;\n            allowedTokenIndex++\n        ) {\n            totalValue =\n                totalValue +\n                getUserSingleTokenValue(\n                    _user,\n                    allowedTokens[allowedTokenIndex]\n                );\n        }\n        return totalValue;\n    }\n\n    // Function A.1: to get a singole token value for a user- used in getUserTotalValue\n    function getUserSingleTokenValue(address _user, address _token)\n        public\n        view\n        returns (uint256)\n    {\n        // 1 ETH -> $2,000\n        // Value -> 2000\n        // 100 DAI -> 100\n        // Value -> 100\n        if (uniqueTokensStaked[_user] <= 0) {\n            return 0;\n        }\n        //  WE want: Token Price * StakingBalance[_token][user]\n        //  new function\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        return (((stakingBalance[_token][_user] * price) / 10**decimals));\n    }\n\n    // Function A.1.1\n    function getTokenValue(address _token)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        //  ChainLink: priceFeedAddress: map each token to priceFeed address - above\n        address priceFeedAddress = tokenPriceFeedMapping[_token];\n        //  we can use it with AggregatorV3Interface\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            priceFeedAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        // we needto know decimals\n        uint256 decimals = uint256(priceFeed.decimals());\n        return (uint256(price), decimals);\n    }\n\n    // 1. stake amount and token address\n    function stakeTokens(uint256 _amount, address _token) public {\n        // which token is stakable\n        // how much can you stake\n        require(_amount > 0, \"Amount must be greater then 0\");\n        // Create a token is allowed funct\n        require(tokenIsAllowed(_token), \"Token is currently not allowed!!\");\n        //  Now call transfer function from ERC20\n        //  ERC20 has 2 tyeo of transfer: transfer and transferFrom\n        //  We need abi to use the function of the token>> import IERC20\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount);\n        updateUniqueTokensStaked(msg.sender, _token);\n        stakingBalance[_token][msg.sender] =\n            stakingBalance[_token][msg.sender] +\n            _amount;\n        // Update list of stakers if new\n        if (uniqueTokensStaked[msg.sender] == 1) {\n            stakers.push(msg.sender);\n        }\n    }\n\n    // 2. unStakeTokens\n    function unstakeTokens(address _token) public {\n        uint256 balance = stakingBalance[_token][msg.sender];\n        require(balance > 0, \"Staking balance cannnot be zero\");\n        IERC20(_token).transfer(msg.sender, balance);\n        stakingBalance[_token][msg.sender] = 0;\n        // Vulnerable to Reentracy Attack???\n        uniqueTokensStaked[msg.sender] = uniqueTokensStaked[msg.sender] - 1;\n        //  We should update the Staker list- skipped for now- but things will stiil work coseissue token check balance\n    }\n\n    function updateUniqueTokensStaked(address _user, address _token) internal {\n        if (stakingBalance[_token][_user] <= 0) {\n            //  uniqueTokStkd is a mapping - above\n            uniqueTokensStaked[_user] = uniqueTokensStaked[_user] + 1;\n        }\n    }\n\n    // 4. addAllowTokens but only from the owner\n    function addAllowedTokens(address _token) public onlyOwner {\n        allowedTokens.push(_token);\n    }\n\n    function tokenIsAllowed(address _token) public returns (bool) {\n        //  we need a list of allowedTokens - above\n        for (\n            uint256 allowedTokensIndex = 0;\n            allowedTokensIndex < allowedTokens.length;\n            allowedTokensIndex++\n        ) {\n            if (allowedTokens[allowedTokensIndex] == _token) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n",
  "sourceMap": "378:5912:4:-:0;;;1011:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:2;867:9:0;:23::i;:::-;1067:9:4;:37;;-1:-1:-1;;;;;;1067:37:4;-1:-1:-1;;;;;1067:37:4;;;;;;;;;;378:5912;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;378:5912:4;;;;;;",
  "sourcePath": "contracts/TokenFarm.sol",
  "type": "contract"
}